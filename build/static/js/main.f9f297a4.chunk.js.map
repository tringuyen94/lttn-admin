{"version":3,"sources":["img/logoLTTN.jpg","services/baseURL.services.jsx","services/product.services.jsx","redux/async-actions/product.action.jsx","redux/async-actions/actionType.jsx","services/project.services.jsx","redux/async-actions/project.action.jsx","Screens/Main/index.jsx","services/user.services.jsx","Layouts/navbar.jsx","redux/async-actions/user.action.jsx","Screens/Authentication/index.jsx","services/category.services.jsx","redux/async-actions/category.action.jsx","Screens/Categories/table.categories.jsx","Screens/Categories/index.jsx","Layouts/footer.jsx","services/brand.services.jsx","redux/async-actions/brand.action.jsx","Screens/Brands/table.brands.jsx","Screens/Brands/index.jsx","components/ImageUpload.jsx","components/RichTextEditor.jsx","Screens/Products/detail.products.jsx","context/AuthProvider.js","components/sidelistitem.jsx","components/sidelist.jsx","Screens/Products/table.products.jsx","Screens/Products/add.product.jsx","Screens/NotFoundPage/index.jsx","Screens/Project/item.project.jsx","Screens/Project/project.jsx","Screens/Project/add.project.jsx","Screens/Project/detail.project.jsx","services/video.services.jsx","Screens/Video/Video.jsx","redux/async-actions/video.action.jsx","App.js","redux/reducers/user.reducer.jsx","redux/reducers/brand.reducer.jsx","redux/reducers/category.reducer.jsx","redux/reducers/products.reducer.jsx","redux/reducers/project.reducer.jsx","redux/reducers/root.reducer.jsx","redux/store.js","index.js"],"names":["module","exports","restConnector","axios","create","baseURL","value","url","method","data","productId","productData","fetchProducts","dispatch","type","ProductServices","then","res","payload","catch","err","toast","error","response","message","projectData","projectId","updateValue","fetchProjects","ProjectServices","Main","useDispatch","products","useSelector","state","product","projects","project","useEffect","Grid","container","justify","className","item","md","Typography","variant","end","length","credentials","Navbar","history","useHistory","onClick","push","Button","console","log","info","logOut","endIcon","Authentication","useState","setCredentials","handleChange","e","target","name","onSubmit","preventDefault","UserService","login","jwt","success","autoComplete","TextField","autoFocus","label","fullWidth","onChange","required","color","categoryId","fetchCategories","CategoryServices","actFetchCategories","CategoryTable","categories","category","isUpdate","setIsUpdate","nameCategory","setNameCategory","columns","options","filter","display","sort","customBodyRender","tableMeta","empty","IconButton","updateCategoryById","go","rowData","Save","startIcon","Edit","title","undefined","filterType","selectableRows","Categories","addCategory","Footer","src","require","alt","width","nameBrand","brandId","fetchBrands","BrandServices","actFetchBrands","BrandTable","brands","brand","setNameBrand","isEdit","setIsEdit","updateBrandById","Brands","addBrand","disabled","ImageUploadComponent","maxNumber","isMultiple","handleFile","imageList","images","setImages","multiple","dataURLKey","onImageUpload","onImageUpdate","onImageRemove","errors","isDragging","dragProps","FormHelperText","style","component","PhotoCamera","fontSize","map","image","index","key","data_url","height","Delete","RichTextEditor","getContentFromRTE","defaultValue","editor","useRef","ref","tabIndex","config","readonly","newContent","DetailProduct","useParams","productById","loadingProd","loading","contentRef","fetchProductById","productValue","setProductValue","isValid","setIsValid","FormGroup","FormControl","margin","InputLabel","htmlFor","NativeSelect","inputProps","id","_id","current","detail","isNewProduct","capacity","productImages","ImageUpload","padding","_formData","FormData","append","forEach","updateProductById","CircularProgress","AuthContext","createContext","AuthProvider","children","profile","setProfile","JSON","parse","localStorage","getItem","Provider","SideListItem","tabSelected","setTabSelected","icon","route","ListItem","withStyles","root","backgroundColor","selected","MuiListItem","button","ListItemIcon","ListItemText","primary","HomeRounded","ComputerRounded","Add","AppsRounded","PostAdd","BlurOn","VideoCall","SideList","location","useLocation","pathname","List","Products","option","size","marginLeft","deleteProductById","rowsPerPage","AddProduct","validateValue","Select","native","placeholder","formData","createProduct","align","NotFoundPage","href","ProjectItem","handleDeleteProject","sm","xs","Card","CardMedia","projectThumb","CardContent","gutterBottom","slice","CardActions","Project","typingTimeOutRef","setSearchTerm","deleteProjectById","sx","m","clearTimeout","setTimeout","searchTerm","filterProject","OutlinedInput","endAdornment","InputAdornment","position","Search","AddProject","loadingProj","setTitle","validateProjectForm","Container","marginTop","maxWidth","border","perText","createProject","DetailProject","projectById","thumb","setThumb","fetchProjectById","content","t","updateProjectById","videoUrl","Video","videoURL","setVideoURL","fetchUrl","a","videoServices","fetchVideoURL","VideoServices","updateVideoURL","App","POSITION","TOP_RIGHT","autoClose","hideProgressBar","path","exact","initialState","userReducer","action","verify","setItem","stringify","clear","brandReducer","temp","categoryReducer","resultArr","productReducer","deletedArr","projectReducer","resultFilter","slug","toLowerCase","includes","rootReducer","combineReducers","user","middlewares","thunk","store","createStore","compose","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9f297a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoLTTN.66c68fd8.jpg\";","import axios from \"axios\"\r\n\r\nexport const domain = 'http://lttnelectric.com:9000'\r\n\r\nexport const restConnector = axios.create({\r\n  baseURL: domain\r\n})","import { restConnector } from \"./baseURL.services\"\r\nclass ProductServices {\r\n  createProduct(value) {\r\n    return restConnector({\r\n      url: `api/products/create-product`,\r\n      method: \"POST\",\r\n      data: value,\r\n    })\r\n  }\r\n  fetchProducts() {\r\n    return restConnector({\r\n      url: `api/products/get-products`,\r\n      method: \"GET\",\r\n    })\r\n  }\r\n  fetchProductById(productId) {\r\n    return restConnector({\r\n      url: `api/products/get-product-by-id/${productId}`,\r\n      method: \"GET\",\r\n    })\r\n  }\r\n  deleteProductById(productId) {\r\n    return restConnector({\r\n      url: `api/products/delete-product/${productId}`,\r\n      method: \"DELETE\",\r\n    })\r\n  }\r\n  updateProductById(productData, productId) {\r\n    return restConnector({\r\n      url: `api/products/update-product/${productId}`,\r\n      method: \"PUT\",\r\n      data: productData,\r\n    })\r\n  }\r\n}\r\nexport default new ProductServices()\r\n","import {\r\n  FETCH_PRODUCTS,\r\n  DELETE_PRODUCT_BY_ID,\r\n  FETCH_PRODUCT_BY_ID,\r\n  LOADING_PRODUCTS,\r\n  UPDATE_PRODUCT_BY_ID,\r\n  CREATE_PRODUCT\r\n} from \"./actionType\"\r\nimport ProductServices from \"../../services/product.services\"\r\nimport { toast } from \"react-toastify\"\r\n\r\nexport const createProduct = (value, history) => {\r\n  return dispatch => {\r\n    dispatch({ type: LOADING_PRODUCTS })\r\n    ProductServices.createProduct(value)\r\n      .then((res) => {\r\n        dispatch({ type: CREATE_PRODUCT })\r\n        history.push('/products')\r\n        toast.success(res.data.message)\r\n      })\r\n      .catch((err) => toast.error(err.response.data.message))\r\n  }\r\n\r\n}\r\nexport const fetchProducts = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: LOADING_PRODUCTS })\r\n    ProductServices.fetchProducts()\r\n      .then((res) => {\r\n        dispatch({ type: FETCH_PRODUCTS, payload: res.data })\r\n      })\r\n      .catch((err) => toast.error(err.response.data.message))\r\n  }\r\n}\r\n\r\n\r\nexport const fetchProductById = (productId) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: LOADING_PRODUCTS })\r\n    ProductServices.fetchProductById(productId)\r\n      .then((res) => dispatch({ type: FETCH_PRODUCT_BY_ID, payload: res.data }))\r\n      .catch((err) => toast.error(err.response.data.message))\r\n  }\r\n}\r\nexport const deleteProductById = (productId) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: LOADING_PRODUCTS })\r\n    ProductServices.deleteProductById(productId)\r\n      .then((res) => {\r\n        dispatch({ type: DELETE_PRODUCT_BY_ID, payload: productId })\r\n        toast.info(res.data.message)\r\n      })\r\n      .catch((err) => toast.error(err.response.data.message))\r\n  }\r\n}\r\nexport const updateProductById = (productData, productId, history) => {\r\n  return dispatch => {\r\n    dispatch({ type: LOADING_PRODUCTS })\r\n    ProductServices.updateProductById(productData, productId)\r\n      .then((res) => {\r\n        dispatch({ type: UPDATE_PRODUCT_BY_ID })\r\n        history.push('/products')\r\n        toast.info(res.data.message)\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.message)\r\n      })\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","//============================USER=========================\r\nexport const LOGIN = \"LOGIN\"\r\nexport const LOGOUT = \"LOGOUT\"\r\n//============================PRODUCT=========================\r\nexport const LOADING_PRODUCTS = \"LOADING_PRODUCTS\"\r\nexport const FETCH_PRODUCTS = \"FETCH_PRODUCTS\"\r\nexport const CREATE_PRODUCT = \"CREATE_PRODUCT\"\r\nexport const FETCH_PRODUCT_BY_ID = \"FETCH_PRODUCT_BY_ID\"\r\nexport const UPDATE_PRODUCT_BY_ID = \"UPDATE_PRODUCT_BY_ID\"\r\nexport const DELETE_PRODUCT_BY_ID = \"DELETE_PRODUCT_BY_ID\"\r\n//============================BRAND=========================\r\nexport const FETCH_BRANDS = \"FETCH_BRAND\"\r\nexport const ADD_BRAND = \"ADD_BRAND\"\r\nexport const UPDATE_BRAND_BY_ID = \"UPDATE_BRAND_BY_ID\"\r\n//============================CATEGORY=========================\r\nexport const FETCH_CATEGORIES = \"FETCH_CATEGORIES\"\r\nexport const ADD_CATEGORY = \"ADD_CATEGORY\"\r\n//============================PROJECT=========================\r\nexport const LOADING_PROJECTS = \"LOADING_PROJECTS\"\r\nexport const FETCH_PROJECTS = \"FETCH_PROJECTS\"\r\nexport const ADD_PROJECT = \"ADD_PROJECTS\"\r\nexport const UPDATE_PROJECT = \"UPDATE_PROJECT\"\r\nexport const FETCH_PROJECT_BY_ID = \"FETCH_PROJECT_BY_ID\"\r\nexport const FILTER_PROJECTS = \"FILTER_PROJECTS\"\r\nexport const DELETE_PROJECT_BY_ID = \"DELETE_PROJECT_BY_ID\"\r\n//============================VIDEO =========================\r\nexport const FETCH_VIDEO = \"FETCH_VIDEO\"\r\nexport const UPDATE_VIDEO = \"UPDATE_VIDEO\"\r\n\r\n","import { restConnector } from \"./baseURL.services\"\n\n\n\nclass ProjectServices {\n   createProject(projectData) {\n      return restConnector({\n         url: 'api/projects/create-project',\n         method: 'POST',\n         data: projectData\n      })\n   }\n   fetchProjects() {\n      return restConnector({\n         url: 'api/projects/get-projects',\n         method: \"GET\"\n      })\n   }\n   fetchProjectById(projectId) {\n      return restConnector({\n         url: `api/projects/get-project-by-id/${projectId}`,\n         method: \"GET\"\n      })\n   }\n   deleteProjectById(projectId) {\n      return restConnector({\n         url: `api/projects/delete-project-by-id/${projectId}`,\n         method: \"DELETE\"\n      })\n   }\n   updateProjectById(projectId, updateValue) {\n      return restConnector({\n         url: `api/projects/update-project-by-id/${projectId}`,\n         data: updateValue,\n         method: \"PUT\"\n      })\n   }\n}\n\n\n\nexport default new ProjectServices()","import { toast } from 'react-toastify'\nimport ProjectServices from '../../services/project.services'\nimport { ADD_PROJECT, DELETE_PROJECT_BY_ID, FETCH_PROJECTS, FETCH_PROJECT_BY_ID, FILTER_PROJECTS, LOADING_PROJECTS, UPDATE_PROJECT } from './actionType'\n\n\n\n\n\nexport const createProject = (projectData, history) => {\n   return dispatch => {\n      dispatch({ type: LOADING_PROJECTS })\n      ProjectServices.createProject(projectData)\n         .then(res => {\n            dispatch({ type: ADD_PROJECT })\n            toast.success(res.data.message)\n            history.push('/projects')\n         })\n         .catch(err => toast.error(err.response.data))\n   }\n\n}\n\nexport const fetchProjects = () => {\n   return dispatch => {\n      ProjectServices.fetchProjects()\n         .then(res => dispatch({ type: FETCH_PROJECTS, payload: res.data }))\n         .catch(err => toast.error('Đã có lỗi xảy ra'))\n   }\n}\nexport const fetchProjectById = (projectId) => {\n   return dispatch => {\n      ProjectServices.fetchProjectById(projectId)\n         .then(res => dispatch({ type: FETCH_PROJECT_BY_ID, payload: res.data }))\n         .catch(err => toast.error(err.response.data.message))\n   }\n}\nexport const filterProject = (searchTerm) => {\n   return dispatch => dispatch({ type: FILTER_PROJECTS, payload: searchTerm })\n}\n\nexport const deleteProjectById = (projectId) => {\n   return dispatch => {\n      ProjectServices.deleteProjectById(projectId)\n         .then(res => {\n            dispatch({ type: DELETE_PROJECT_BY_ID, payload: projectId })\n            toast.success(res.data.message)\n         })\n         .catch(err => toast.error(err.response.data.message))\n   }\n}\n\n\nexport const updateProjectById = (projectId, updateValue, history) => {\n   return dispatch => {\n      dispatch({ type: LOADING_PROJECTS })\n      ProjectServices.updateProjectById(projectId, updateValue)\n         .then(res => {\n            dispatch({ type: UPDATE_PROJECT })\n            toast.success(res.data.message)\n            history.push('/projects')\n         })\n         .catch(err => toast.error(err.response.data.message))\n   }\n\n}\n","import React, { useEffect } from \"react\"\r\nimport { Grid, Typography, } from '@material-ui/core'\r\nimport CountUp from 'react-countup';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { fetchProducts } from \"../../redux/async-actions/product.action\"\r\nimport { fetchProjects } from \"../../redux/async-actions/project.action\";\r\nimport './main.css'\r\n\r\n\r\nconst Main = () => {\r\n  const dispatch = useDispatch()\r\n  const products = useSelector(state => state.product.products)\r\n  const projects = useSelector(state => state.project.projects)\r\n  useEffect(() => {\r\n    dispatch(fetchProducts())\r\n    dispatch(fetchProjects())\r\n  }, [dispatch])\r\n  return (\r\n    <Grid container justify='space-between' className=\"main\">\r\n      <Grid item md={6} >\r\n        <Typography variant=\"h6\">Tổng sản phẩm</Typography>\r\n        {products ?\r\n          <Typography variant=\"h3\">\r\n            <CountUp end={products.length} />\r\n          </Typography>\r\n          : null}\r\n      </Grid>\r\n      <Grid item md={6}>\r\n        <Typography variant=\"h6\">Tổng số dự án</Typography>\r\n        {projects ?\r\n          <Typography variant=\"h3\">\r\n            <CountUp end={projects.length} />\r\n          </Typography>\r\n          : null}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Main\r\n","import { restConnector } from \"./baseURL.services\"\r\n\r\nclass UserService {\r\n  login(credentials) {\r\n    return restConnector({\r\n      url: `/api/users/login`,\r\n      method: `POST`,\r\n      data: credentials\r\n    })\r\n  }\r\n}\r\nexport default new UserService()\r\n","import React from \"react\"\r\nimport { Button } from \"@material-ui/core\"\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { logOut } from \"../redux/async-actions/user.action\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport './navbar.css'\r\n\r\nconst Navbar = () => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <h1 className='admin-navivation' onClick={() => history.push('/admin')}>admin</h1>\r\n      <Button\r\n        onClick={() => dispatch(logOut(history))}\r\n        variant=\"outlined\"\r\n        endIcon={<ExitToAppIcon />}\r\n      >\r\n        Đăng xuất\r\n      </Button>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import { LOGIN, LOGOUT } from \"./actionType\"\r\nimport UserService from \"../../services/user.services\"\r\nimport { toast } from \"react-toastify\"\r\n\r\nexport const login = (credentials, history) => {\r\n  return (dispatch) => {\r\n    UserService.login(credentials)\r\n      .then((res) => {\r\n        dispatch({ type: LOGIN, payload: res.data.jwt })\r\n        history.push('/admin')\r\n        toast.success(res.data.message)\r\n      })\r\n      .catch((err) => toast.error(err.response.data.message))\r\n  }\r\n}\r\n\r\nexport const logOut = (history) => {\r\n  console.log('log out here')\r\n  return (dispatch) => {\r\n    dispatch({ type: LOGOUT })\r\n    history.push('/login')\r\n    toast.info('Đã đăng xuất khỏi hệ thống')\r\n  }\r\n}","import React, { useState } from \"react\"\r\nimport { login } from \"../../redux/async-actions/user.action\"\r\nimport { TextField, Button } from \"@material-ui/core\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport './authentication.css'\r\nconst Authentication = () => {\r\n  const [credentials, setCredentials] = useState()\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const handleChange = (e) => {\r\n    setCredentials({\r\n      ...credentials,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n  const handleLogin = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(credentials, history))\r\n  }\r\n  return (\r\n    <div className=\"authentication\">\r\n      <form onSubmit={handleLogin}\r\n        className=\"loginform\"\r\n        autoComplete=\"off\">\r\n        <TextField\r\n          className=\"input\"\r\n          variant=\"outlined\"\r\n          name=\"email\"\r\n          autoFocus={true}\r\n          label=\"Email\"\r\n          fullWidth\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <br />\r\n        <TextField\r\n          type=\"password\"\r\n          className=\"input\"\r\n          variant=\"outlined\"\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          fullWidth\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <br />\r\n        <Button variant=\"contained\"\r\n          fullWidth\r\n          color=\"primary\" type=\"submit\">\r\n          Login\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Authentication\r\n","import { restConnector } from \"./baseURL.services\"\r\nclass CategoryServices {\r\n  fetchCategories() {\r\n    return restConnector({\r\n      url: `api/categories`,\r\n      method: \"get\",\r\n    })\r\n  }\r\n  addCategory(value) {\r\n    return restConnector({\r\n      url: `api/categories/create-category`,\r\n      method: \"post\",\r\n      data: { 'nameCategory': value },\r\n    })\r\n  }\r\n  updateCategoryById(value, categoryId) {\r\n    return restConnector({\r\n      url: `api/categories/update-category-by-id/${categoryId}`,\r\n      method: \"PUT\",\r\n      data: value,\r\n    })\r\n  }\r\n}\r\nexport default new CategoryServices()\r\n","import {\r\n  FETCH_CATEGORIES,\r\n  ADD_CATEGORY,\r\n} from \"./actionType\"\r\nimport CategoryServices from \"../../services/category.services\"\r\nimport { toast } from \"react-toastify\"\r\n\r\nexport const fetchCategories = () => {\r\n  return (dispatch) => {\r\n    CategoryServices.fetchCategories()\r\n      .then((res) => {\r\n        dispatch(actFetchCategories(res.data))\r\n      })\r\n      .catch((err) => console.log)\r\n  }\r\n}\r\nexport const addCategory = (value) => {\r\n  return (dispatch) => {\r\n    CategoryServices.addCategory(value)\r\n      .then((res) => {\r\n        dispatch({ type: ADD_CATEGORY, payload: { nameCategory: value } })\r\n        toast.success(res.data.message)\r\n      })\r\n      .catch((err) => toast.error(err.response.data.message))\r\n  }\r\n}\r\n\r\nexport const updateCategoryById = (value, categoryId,history) => {\r\n  return dispatch => {\r\n    CategoryServices.updateCategoryById(value, categoryId)\r\n      .then((res) => {\r\n        history.go(0)\r\n        toast.success(res.data.message)\r\n      })\r\n      // .catch((err) => toast.error(err.response.data.message))\r\n  }\r\n}\r\n\r\nexport const actFetchCategories = (data) => {\r\n  return {\r\n    type: FETCH_CATEGORIES,\r\n    payload: data,\r\n  }\r\n}\r\n","import React, { Fragment, useEffect, useState } from \"react\"\r\nimport MUIDataTable from \"mui-datatables\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { fetchCategories } from \"../../redux/async-actions/category.action\"\r\nimport { Button, IconButton, TextField } from \"@material-ui/core\"\r\nimport { updateCategoryById } from \"../../redux/async-actions/category.action\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Save, Edit } from \"@material-ui/icons\"\r\n\r\nconst CategoryTable = () => {\r\n  const dispatch = useDispatch()\r\n  const categories = useSelector(state => state.category.categories)\r\n\r\n  const [isUpdate, setIsUpdate] = useState(false)\r\n  const [nameCategory, setNameCategory] = useState()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCategories())\r\n  }, [dispatch])\r\n\r\n\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setNameCategory({\r\n      nameCategory: e.target.value,\r\n    })\r\n  }\r\n\r\n\r\n  const columns = [\r\n    {\r\n      name: \"_id\",\r\n      label: \"Id\",\r\n      options: {\r\n        filter: false,\r\n        display: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"nameCategory\",\r\n      label: \"Loại sản phẩm\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"Update\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        display: isUpdate,\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <div>\r\n              <TextField label=\"Nhập thay đổi\" onChange={handleChange} />\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"Setting\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        empty: true,\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return isUpdate ? (\r\n            <IconButton\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                dispatch(updateCategoryById(\r\n                  nameCategory,\r\n                  tableMeta.rowData[0],\r\n                  history\r\n                ))\r\n              }}\r\n            >\r\n              <Save />\r\n            </IconButton>\r\n          ) : (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<Edit />}\r\n              onClick={() => setIsUpdate(true)}\r\n            >\r\n              Cập nhật\r\n            </Button>\r\n          )\r\n        },\r\n      },\r\n    },\r\n  ]\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    selectableRows: \"none\",\r\n\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <MUIDataTable\r\n        title={\"Các loại sản phẩm \"}\r\n        data={categories ? categories : undefined}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default CategoryTable\r\n","import React, { Fragment, useState } from \"react\"\r\nimport CategoryTable from \"./table.categories\"\r\nimport { addCategory } from \"../../redux/async-actions/category.action\"\r\nimport { Button, TextField } from \"@material-ui/core\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport \"./category.css\"\r\nconst Categories = () => {\r\n  const [nameCategory, setNameCategory] = useState('')\r\n  const dispatch = useDispatch()\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    dispatch(addCategory(nameCategory))\r\n    setNameCategory('')\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className=\"category__container\">\r\n        <TextField\r\n          variant=\"filled\"\r\n          label=\"Nhập loại sản phẩm\"\r\n          name=\"nameCategory\"\r\n          value={nameCategory}\r\n          onChange={(e) => setNameCategory(e.target.value)}\r\n        />\r\n        <Button color=\"primary\" variant=\"outlined\" onClick={handleSubmit}>\r\n          Thêm\r\n        </Button>\r\n      </div>\r\n      <CategoryTable />\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Categories\r\n","import React from \"react\"\r\nimport './footer.css'\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer text-center\">\r\n        <p className=\"footer-company py-1 my-1\">\r\n          Công ty TNHH Thương mại điện tử LTTN Electric{\" \"}\r\n        </p>\r\n          <img\r\n            src={require(\"../img/logoLTTN.jpg\")}\r\n            alt=\"\"\r\n            width=\"40px\"\r\n            className=\"rounded-circle\"\r\n          />\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { restConnector } from \"./baseURL.services\"\r\nclass BrandServices {\r\n  fetchBrands() {\r\n    return restConnector({\r\n      url: `api/brands/get-brands`,\r\n      method: \"get\",\r\n    })\r\n  }\r\n  addBrand(value) {\r\n    return restConnector({\r\n      url: `api/brands/create-brand`,\r\n      method: \"post\",\r\n      data: { nameBrand: value },\r\n    })\r\n  }\r\n  updateBrandById(value, brandId) {\r\n    return restConnector({\r\n      url: `api/brands/update-brand-by-id/${brandId}`,\r\n      method: \"PUT\",\r\n      data: value,\r\n    })\r\n  }\r\n}\r\nexport default new BrandServices()\r\n","import {\r\n  FETCH_BRANDS,\r\n  ADD_BRAND,\r\n} from \"./actionType\"\r\nimport BrandServices from \"../../services/brand.services\"\r\nimport { toast } from \"react-toastify\"\r\n\r\nexport const fetchBrands = () => {\r\n  return (dispatch) => {\r\n    BrandServices.fetchBrands()\r\n      .then((res) => {\r\n        dispatch(actFetchBrands(res.data))\r\n      })\r\n      .catch((err) => console.log)\r\n  }\r\n}\r\nexport const addBrand = (value) => {\r\n  return (dispatch) => {\r\n    BrandServices.addBrand(value)\r\n      .then((res) => {\r\n        dispatch({ type: ADD_BRAND, payload: res.data.brand })\r\n        toast.success(res.data.message)\r\n      })\r\n      .catch((err) => toast.error(err.response.data.message))\r\n  }\r\n}\r\n\r\nexport const updateBrandById = (value, brandId, history) => {\r\n  BrandServices.updateBrandById(value, brandId)\r\n    .then((res) => {\r\n      history.go(0)\r\n      toast.success(res.data.message)\r\n    })\r\n    .catch((err) => toast.error(err.response.data.message))\r\n}\r\n\r\n\r\nexport const actFetchBrands = (data) => {\r\n  return {\r\n    type: FETCH_BRANDS,\r\n    payload: data,\r\n  }\r\n}\r\n\r\n","import React, { Fragment, useEffect, useState } from \"react\"\r\nimport MUIDataTable from \"mui-datatables\"\r\nimport {\r\n  fetchBrands,\r\n  updateBrandById,\r\n} from \"../../redux/async-actions/brand.action\"\r\nimport { Button, IconButton, TextField } from \"@material-ui/core\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Edit, Save } from \"@material-ui/icons\"\r\n\r\nconst BrandTable = () => {\r\n  const dispatch = useDispatch()\r\n  const brands = useSelector(state => state.brand.brands)\r\n  const history = useHistory()\r\n  const [nameBrand, setNameBrand] = useState()\r\n  const [isEdit, setIsEdit] = useState(false)\r\n  const handleChange = (e) => {\r\n    setNameBrand({\r\n      nameBrand: e.target.value,\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    dispatch(fetchBrands())\r\n  }, [dispatch])\r\n  const columns = [\r\n    {\r\n      name: \"_id\",\r\n      label: \"Id\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"nameBrand\",\r\n      label: \"Nhãn hàng\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"Update\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        display: isEdit,\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <TextField label=\"Nhập thay đổi\" onChange={handleChange} />\r\n          )\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"Setting\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        empty: true,\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return isEdit ? (\r\n            <IconButton\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                updateBrandById(nameBrand, tableMeta.rowData[0], history)\r\n              }}\r\n            >\r\n              <Save />\r\n            </IconButton>\r\n          ) : (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<Edit />}\r\n                onClick={() => setIsEdit(true)}\r\n              >\r\n                Cập nhật\r\n              </Button>\r\n            </>\r\n          )\r\n        },\r\n      },\r\n    },\r\n  ]\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    selectableRows:\"none\"\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <MUIDataTable\r\n        title={\"Các nhãn hàng\"}\r\n        data={brands ? brands : undefined}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default BrandTable\r\n","import React, { Fragment, useState } from \"react\"\r\nimport BrandTable from \"./table.brands\"\r\nimport { addBrand } from \"../../redux/async-actions/brand.action\"\r\nimport './brand.css'\r\nimport { useDispatch } from \"react-redux\"\r\nimport { Button, TextField } from \"@material-ui/core\"\r\nconst Brands = () => {\r\n  const [nameBrand, setNameBrand] = useState('')\r\n  const dispatch = useDispatch()\r\n  const handleAddBrand = (e) => {\r\n    e.preventDefault()\r\n    dispatch(addBrand(nameBrand))\r\n    setNameBrand('')\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className=\"brand__container\">\r\n        <TextField\r\n          variant=\"filled\"\r\n          label=\"Nhập nhãn hàng\"\r\n          name=\"nameBrand\"\r\n          value={nameBrand}\r\n          onChange={(e) =>setNameBrand(e.target.value)}\r\n        />\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          onClick={handleAddBrand}\r\n          disabled={!nameBrand}\r\n        >\r\n          Thêm\r\n        </Button>\r\n      </div>\r\n      <BrandTable />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Brands\r\n","import React, { useState } from 'react'\nimport ImageUploading from 'react-images-uploading'\nimport { FormHelperText, IconButton, Grid } from '@material-ui/core'\nimport { PhotoCamera, Edit, Delete } from '@material-ui/icons'\n\n\nconst ImageUploadComponent = ({ maxNumber, isMultiple, handleFile, imageList }) => {\n   const [images, setImages] = useState()\n\n   return (\n      <ImageUploading\n         multiple={isMultiple}\n         value={images}\n         onChange={imageList => {\n            setImages(imageList)\n            handleFile(imageList)\n         }}\n         maxNumber={maxNumber}\n         dataURLKey=\"data_url\"\n      >\n         {({\n            imageList,\n            onImageUpload,\n            onImageUpdate,\n            onImageRemove,\n            errors,\n            isDragging,\n            dragProps,\n         }) => (\n            // write your building UI\n            <div className=\"upload__image-wrapper\">\n               {errors && <FormHelperText style={{ color: \"red\" }}>Kiểm tra số lượng ảnh</FormHelperText>}\n               <div>\n                  <IconButton\n                     component=\"span\"\n                     variant=\"outlined\"\n                     color={isDragging ? 'secondary' : \"primary\"}\n                     onClick={onImageUpload}\n                     {...dragProps}\n                  >\n                     <PhotoCamera style={{ fontSize: \"3rem\" }} />\n                  </IconButton>\n               </div>\n               &nbsp;\n               <Grid container>\n                  {imageList.map((image, index) => (\n                     <Grid key={index} item md={2} >\n                        <div className=\"image-item\">\n                           <img src={image.data_url} alt=\"selected\" width=\"100px\" height=\"120px\" />\n                           <div className=\"image-item__btn-wrapper\">\n                              <IconButton color=\"primary\" onClick={() => onImageUpdate(index)}><Edit /></IconButton>\n                              <IconButton color=\"secondary\" onClick={() => onImageRemove(index)}><Delete /></IconButton>\n                           </div>\n                        </div>\n                     </Grid>\n                  ))}\n               </Grid>\n            </div>\n         )\n         }\n      </ImageUploading >\n   )\n}\n\nexport default ImageUploadComponent","import React, { useRef } from 'react'\nimport JoditEditor from \"jodit-react\"\n\nconst RichTextEditor = ({ getContentFromRTE, defaultValue }) => {\n   const editor = useRef(null)\n   return (\n      <JoditEditor\n         ref={editor}\n         tabIndex={1}\n         config={{ readonly: false }}\n         value={defaultValue}\n         onChange={newContent => getContentFromRTE(newContent)}\n      />\n   )\n}\nexport default RichTextEditor","import React, { useRef, useEffect, useState, Fragment } from \"react\"\r\nimport {\r\n  fetchProductById,\r\n  updateProductById,\r\n} from \"../../redux/async-actions/product.action\"\r\nimport {\r\n  TextField,\r\n  Button,\r\n  NativeSelect,\r\n  InputLabel,\r\n  FormControl,\r\n  FormGroup,\r\n  Grid,\r\n  FormHelperText,\r\n  CircularProgress,\r\n} from \"@material-ui/core\"\r\nimport { fetchCategories } from \"../../redux/async-actions/category.action\"\r\nimport { fetchBrands } from \"../../redux/async-actions/brand.action\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport ImageUploadComponent from \"../../components/ImageUpload\"\r\nimport RichTextEditor from \"../../components/RichTextEditor\"\r\n\r\nconst DetailProduct = () => {\r\n  const dispatch = useDispatch()\r\n  const { productId } = useParams()\r\n  const history = useHistory()\r\n  const productById = useSelector(state => state.product.productById)\r\n  const loadingProd = useSelector(state => state.product.loading)\r\n  const brands = useSelector(state => state.brand.brands)\r\n  const categories = useSelector(state => state.category.categories)\r\n  const contentRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProductById(productId))\r\n    dispatch(fetchCategories())\r\n    dispatch(fetchBrands())\r\n  }, [dispatch, productId])\r\n\r\n\r\n\r\n\r\n  const [productValue, setProductValue] = useState()\r\n  const [images, setImages] = useState([])\r\n  const [isValid, setIsValid] = useState(false)\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setProductValue({\r\n      ...productValue,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n    setIsValid(true)\r\n  }\r\n  const getContentFromRTE = (value) => {\r\n    contentRef.current = value\r\n    if (productById.detail !== contentRef.current) return setIsValid(true)\r\n  }\r\n\r\n  const handleFile = (imageList) => {\r\n    if (imageList.length < 4) return setIsValid(false)\r\n    setImages(imageList)\r\n    setIsValid(true)\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (!isValid) return\r\n    let _formData = new FormData()\r\n    _formData.append('name', productValue?.name)\r\n    _formData.append('brand', productValue?.brand)\r\n    _formData.append('category', productValue?.category)\r\n    _formData.append('capacity', productValue?.capacity)\r\n    _formData.append('isNewProduct', productValue?.isNewProduct)\r\n    _formData.append('detail', contentRef.current)\r\n    images.forEach(image => _formData.append('productImages', image.data_url))\r\n    dispatch(updateProductById(_formData, productId, history))\r\n\r\n  }\r\n\r\n  return (\r\n    productById && (\r\n      <Grid container justify=\"center\">\r\n        <FormGroup>\r\n          <Grid item md={6}>\r\n            <FormControl style={{ width: \"400px\", margin: \"10px 20px\" }} >\r\n              <TextField\r\n                label=\"Tên sản phẩm\"\r\n                defaultValue={productById.name}\r\n                variant=\"filled\"\r\n                onChange={handleChange}\r\n                fullWidth={true}\r\n                name=\"name\"\r\n              />\r\n            </FormControl>\r\n            <FormControl style={{ width: \"400px\", margin: \"10px 20px\" }}>\r\n              <InputLabel htmlFor=\"brand\">Tên nhãn hàng</InputLabel>\r\n              <NativeSelect\r\n                inputProps={{\r\n                  name: \"brand\",\r\n                  id: \"brand\",\r\n                }}\r\n                variant=\"filled\"\r\n                defaultValue={productById.brand._id}\r\n                onChange={handleChange}\r\n              >\r\n                {brands &&\r\n                  brands.map((brand, index) => {\r\n                    return (\r\n                      <option\r\n                        key={index}\r\n                        value={brand._id} >\r\n                        {brand.nameBrand}\r\n                      </option>\r\n                    )\r\n                  })}\r\n              </NativeSelect>\r\n            </FormControl>\r\n            <FormControl style={{ width: \"400px\", margin: \"10px 20px\" }}>\r\n              <InputLabel htmlFor=\"categories\">Loại sản phẩm</InputLabel>\r\n              <NativeSelect\r\n                inputProps={{\r\n                  name: \"category\",\r\n                  id: \"category\",\r\n                }}\r\n                defaultValue={productById.category._id}\r\n                onChange={handleChange}\r\n              >\r\n                {categories &&\r\n                  categories.map((category, index) => {\r\n                    return (\r\n                      <option key={index} value={category._id}>\r\n                        {category.nameCategory}\r\n                      </option>\r\n                    )\r\n                  })}\r\n              </NativeSelect>\r\n            </FormControl>\r\n            <FormControl style={{ width: \"400px\", margin: \"10px 20px\" }}>\r\n              <RichTextEditor getContentFromRTE={getContentFromRTE} defaultValue={productById.detail} />\r\n            </FormControl>\r\n            <FormControl style={{ width: \"200px\", margin: \"10px 20px\" }}>\r\n              <InputLabel htmlFor=\"isNewProduct\">Tình trạng</InputLabel>\r\n              <NativeSelect\r\n                inputProps={{\r\n                  name: \"isNewProduct\",\r\n                  id: \"isNewProduct\",\r\n                }}\r\n                defaultValue={productById.isNewProduct ? true : false}\r\n                onChange={handleChange}\r\n              >\r\n                <option value={true}>Mới </option>\r\n                <option value={false}>Cũ</option>\r\n              </NativeSelect>\r\n\r\n            </FormControl>\r\n            <FormControl style={{ width: \"200px\", margin: \"10px 20px\" }}>\r\n              <TextField\r\n                name=\"capacity\"\r\n                label=\"Công suất\"\r\n                defaultValue={productById.capacity}\r\n                variant=\"filled\"\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <FormHelperText> ** Thay đổi nội dung muốn thay đổi xong nhấn Lưu</FormHelperText>\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <Grid container>\r\n              {productById.productImages.map((item, index) => (\r\n                <Grid key={index} item >\r\n                  <img width=\"100px\" height=\"120px\" src={item.url} alt={productById.name} />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n            <FormControl >\r\n              <ImageUploadComponent maxNumber={4} isMultiple={true} handleFile={handleFile} imageList={images} />\r\n              <FormHelperText> *** Chọn ảnh mới để cập nhật </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <FormControl style={{ padding: \"0 40px\" }} >\r\n            <Button\r\n              disabled={!isValid || loadingProd} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n              {loadingProd ? <CircularProgress /> : \"Lưu\"}\r\n            </Button>\r\n          </FormControl >\r\n        </FormGroup >\r\n\r\n      </Grid >\r\n    )\r\n  )\r\n}\r\n\r\n\r\nexport default DetailProduct\r\n","import React, { createContext, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\n\nexport const AuthContext = createContext()\n\nconst AuthProvider = ({ children }) => {\n   const history = useHistory()\n   const [profile, setProfile] = useState({})\n\n   useEffect(() => {\n      let profile = JSON.parse(localStorage.getItem('profile'))\n      if (!profile) {\n         history.push('/login')\n         return\n      }\n      else {\n         setProfile(profile)\n      }\n   }, [history])\n   return (\n      <AuthContext.Provider value={{ profile }} >\n         {children}\n      </AuthContext.Provider>\n   )\n}\nexport default AuthProvider","\nimport React from 'react'\nimport MuiListItem from \"@material-ui/core/ListItem\";\nimport {\n   ListItemIcon, withStyles,\n   ListItemText\n} from '@material-ui/core'\n\nconst SideListItem = ({ tabSelected, setTabSelected, history, tabIndex, icon, route, label }) => {\n   const ListItem = withStyles({\n      root: {\n         \"&$selected\": {\n            backgroundColor: \"#2980b9\",\n            color: \"white\",\n            \"& .MuiListItemIcon-root\": {\n               color: \"white\"\n            }\n         },\n         \"&$selected:hover\": {\n            backgroundColor: \"#2980b9\",\n            color: \"white\",\n            \"& .MuiListItemIcon-root\": {\n               color: \"white\"\n            }\n         },\n         \"&:hover\": {\n            backgroundColor: \"#95a5a6\",\n            color: \"white\",\n            \"& .MuiListItemIcon-root\": {\n               color: \"white\"\n            }\n         }\n      },\n      selected: {}\n   })(MuiListItem)\n   return (\n      <ListItem\n         button\n         selected={tabSelected === tabIndex}\n         onClick={() => {\n            history.push(`${route}`)\n            setTabSelected(tabIndex)\n         }}>\n         <ListItemIcon>{icon}</ListItemIcon>\n         <ListItemText primary={label} />\n      </ListItem>\n   )\n}\nexport default SideListItem","import React, { useEffect, useState } from \"react\"\r\nimport {\r\n  List,\r\n} from \"@material-ui/core\"\r\nimport {\r\n  HomeRounded, ComputerRounded, AppsRounded,\r\n  BlurOn, Add, PostAdd, VideoCall\r\n} from \"@material-ui/icons\"\r\nimport './sidelist.css'\r\nimport { useHistory, useLocation } from \"react-router\"\r\nimport SideListItem from \"./sidelistitem\";\r\n\r\n\r\nconst data = [\r\n  { route: \"/admin\", tabIndex: 0, icon: <HomeRounded />, label: \"Home\" },\r\n  { route: \"/products\", tabIndex: 1, icon: <ComputerRounded />, label: \"Sản phẩm\" },\r\n  { route: \"/products/add-product\", tabIndex: 2, icon: <Add />, label: \"Thêm sản phẩm\" },\r\n  { route: \"/projects\", tabIndex: 3, icon: <AppsRounded />, label: \"Dự án\" },\r\n  { route: \"/projects/add-project\", tabIndex: 4, icon: <PostAdd />, label: \"Thêm dự án\" },\r\n  { route: \"/categories\", tabIndex: 5, icon: <AppsRounded />, label: \"Loại sản phẩm\" },\r\n  { route: \"/brands\", tabIndex: 6, icon: <BlurOn />, label: \"Nhãn hàng\" },\r\n  { route: \"/video\", tabIndex: 7, icon: <VideoCall />, label: \"Video\" },\r\n\r\n]\r\nconst SideList = () => {\r\n\r\n  const history = useHistory()\r\n  const [tabSelected, setTabSelected] = useState(0)\r\n  const location = useLocation()\r\n  useEffect(() => {\r\n    switch (location.pathname) {\r\n      case '/':\r\n        setTabSelected(0)\r\n        break;\r\n      case '/admin':\r\n        setTabSelected(0)\r\n        break;\r\n      case '/products':\r\n        setTabSelected(1)\r\n        break;\r\n      case '/products/add-product':\r\n        setTabSelected(2)\r\n        break;\r\n      case '/projects':\r\n        setTabSelected(3)\r\n        break;\r\n      case '/projects/add-project':\r\n        setTabSelected(4)\r\n        break;\r\n      case '/categories':\r\n        setTabSelected(5)\r\n        break;\r\n      case '/brands':\r\n        setTabSelected(6)\r\n        break;\r\n      case '/video':\r\n        setTabSelected(7)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [location.pathname])\r\n\r\n\r\n  return (\r\n    <List component=\"nav\" className=\"sidelist\">\r\n      {data.map((item, index) => <SideListItem\r\n        key={index}\r\n        history={history}\r\n        route={item.route}\r\n        tabSelected={tabSelected}\r\n        setTabSelected={setTabSelected}\r\n        tabIndex={item.tabIndex}\r\n        icon={item.icon}\r\n        label={item.label}\r\n      />)}\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default SideList\r\n","import React, { useEffect } from \"react\"\r\nimport MUIDataTable from \"mui-datatables\"\r\nimport { Button } from \"@material-ui/core\"\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { fetchProducts } from \"../../redux/async-actions/product.action\"\r\nimport { deleteProductById } from \"../../redux/async-actions/product.action\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\n\r\nconst Products = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const products = useSelector(state => state.product.products)\r\n  const loadingProd = useSelector(state => state.product.loading)\r\n  const options = {\r\n    selectableRows: \"none\",\r\n    filterType: \"dropdown\",\r\n    rowsPerPage: 5\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProducts())\r\n  }, [dispatch])\r\n\r\n\r\n  const columns = [\r\n    {\r\n      name: \"_id\",\r\n      label: \"Id\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"name\",\r\n      label: \"Tên sản phẩm\",\r\n      option: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"productImages\",\r\n      label: \"Hình ảnh\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        customBodyRender: (name) => {\r\n          return (\r\n            <img\r\n              src={name[0]?.url}\r\n              alt=\"product\"\r\n              width=\"100px\"\r\n              height=\"100px\"\r\n            />\r\n          )\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"detail\",\r\n      label: \"Mô tả\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        display: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"isNewProduct\",\r\n      label: \"Tình trạng\",\r\n      options: {\r\n        customBodyRender: (name) => {\r\n          return name ? \"Mới\" : \"Cũ\"\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"category.nameCategory\",\r\n      label: \"Loại sản phẩm\",\r\n      options: {\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"brand.nameBrand\",\r\n      label: \"Hãng\",\r\n      options: {\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"capacity.nameCapacity\",\r\n      label: \"Công suất\",\r\n      options: {\r\n        display: false,\r\n        sort: false,\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"Thiết lập\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        empty: true,\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => history.push(`/products/update-product/${tableMeta.rowData[0]}`)}\r\n              >\r\n                Cập nhật\r\n              </Button>\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                style={{ marginLeft: \"10px\" }}\r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                  dispatch(deleteProductById(`${tableMeta.rowData[0]}`))\r\n                }}\r\n              >\r\n                {loadingProd ? <CircularProgress /> : \"Xoá\"}\r\n              </Button>\r\n            </>\r\n          )\r\n        },\r\n      },\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <MUIDataTable\r\n      className=\"table__products\"\r\n      title={\"Danh sách sản phẩm\"}\r\n      data={products ? products : undefined}\r\n      columns={columns}\r\n      options={options}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Products\r\n","import React, { useState, useEffect } from \"react\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { createProduct } from \"../../redux/async-actions/product.action\"\r\nimport { fetchBrands } from \"../../redux/async-actions/brand.action\"\r\nimport { fetchCategories } from \"../../redux/async-actions/category.action\"\r\nimport { Button, CircularProgress, FormControl, FormHelperText, Grid, Select, TextField } from \"@material-ui/core\"\r\nimport './product.css'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport RichTextEditor from \"../../components/RichTextEditor\"\r\nimport { useRef } from \"react\"\r\nimport ImageUploadComponent from \"../../components/ImageUpload\"\r\n\r\n\r\nconst AddProduct = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const brands = useSelector(state => state.brand.brands)\r\n  const categories = useSelector(state => state.category.categories)\r\n  const loadingProd = useSelector(state => state.product.loading)\r\n\r\n  const contentRef = useRef(null)\r\n  const [productValue, setProductValue] = useState({})\r\n  const [images, setImages] = useState([]);\r\n  const [isValid, setIsValid] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCategories())\r\n    dispatch(fetchBrands())\r\n  }, [dispatch])\r\n\r\n  const getContentFromRTE = (value) => {\r\n    contentRef.current = value\r\n    validateValue()\r\n  }\r\n  const handleChange = (e) => {\r\n    setProductValue({\r\n      ...productValue,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n    validateValue()\r\n  }\r\n  const handleFile = (imageList) => {\r\n    // data for submit\r\n    setImages(imageList);\r\n    validateValue()\r\n  }\r\n\r\n  /// Submit Form Data\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (!isValid) return\r\n    let formData = new FormData()\r\n    /**\r\n     * Append Data from input to formData\r\n     */\r\n    formData.append('name', productValue.name)\r\n    formData.append('brand', productValue.brand)\r\n    formData.append('category', productValue.category)\r\n    formData.append('detail', contentRef.current)\r\n    formData.append('capacity', productValue.capacity)\r\n    formData.append('isNewProduct', productValue.isNewProduct)\r\n    images.forEach(image => formData.append('productImages', image.data_url))\r\n    // Call API\r\n    dispatch(createProduct(formData, history))\r\n  }\r\n\r\n  //Validate Input\r\n  const validateValue = () => {\r\n    if (productValue.name === '' ||\r\n      productValue.brand === '' ||\r\n      productValue.category === '' ||\r\n      contentRef.current === '' ||\r\n      productValue.capacity === '' ||\r\n      productValue.isNewProduct === '' ||\r\n      images.length !== 4\r\n    ) {\r\n      setIsValid(false)\r\n    }\r\n    else setIsValid(true)\r\n  }\r\n\r\n  return (\r\n    <Grid container justify=\"space-between\">\r\n      <Grid item md={4} style={{ padding: \"1.3rem 1.8rem\" }}>\r\n        <FormHelperText>Chọn loại sản phẩm</FormHelperText>\r\n        <FormControl variant=\"filled\" fullWidth>\r\n          <Select\r\n            native\r\n            name=\"category\"\r\n            value={productValue.category}\r\n            onChange={handleChange}\r\n          >\r\n            <option defaultValue>Loại sản phẩm</option>\r\n            {categories && categories.map((category, index) => {\r\n              return (\r\n                <option key={index} value={category._id}>\r\n                  {category.nameCategory}\r\n                </option>\r\n              )\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl variant=\"filled\" fullWidth>\r\n          <FormHelperText>Chọn hãng </FormHelperText>\r\n          <Select\r\n            native\r\n            name=\"brand\"\r\n            onChange={handleChange}\r\n          >\r\n            <option defaultValue>Chọn hãng</option>\r\n            {brands &&\r\n              brands.map((brand, index) => {\r\n                return (\r\n                  <option key={index} value={brand._id}>\r\n                    {brand.nameBrand}\r\n                  </option>\r\n                )\r\n              })}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl fullWidth>\r\n          <FormHelperText>Nhập tên sản phấm</FormHelperText>\r\n          <TextField\r\n            variant=\"filled\"\r\n            label=\"Tên sản phẩm\"\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n          />\r\n        </FormControl>\r\n        <FormControl fullWidth>\r\n          <FormHelperText>Nhập công suất của máy ( có thể bỏ qua trường này )</FormHelperText>\r\n          <TextField\r\n            variant=\"filled\"\r\n            placeholder=\"Nhập công suất\"\r\n            name=\"capacity\"\r\n            onChange={handleChange}\r\n          />\r\n        </FormControl>\r\n        <FormControl fullWidth variant=\"filled\">\r\n          <FormHelperText>Nhập tình trạng máy</FormHelperText>\r\n          <Select\r\n            native\r\n            id=\"inputState\"\r\n            name=\"isNewProduct\"\r\n            onChange={handleChange}\r\n          >\r\n            <option defaultValue>Tình trạng</option>\r\n            <option value={true}>Mới</option>\r\n            <option value={false}>Cũ</option>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item md={8} style={{ padding: \"1.3rem 1.8rem\" }}>\r\n        <FormControl fullWidth>\r\n          <FormHelperText> Chọn 4 ảnh sản phẩm  </FormHelperText>\r\n          <ImageUploadComponent\r\n            maxNumber={4}\r\n            isMultiple={true}\r\n            handleFile={handleFile} />\r\n        </FormControl>\r\n        <FormControl fullWidth>\r\n          <FormHelperText>Nhập chi tiết sản phẩm</FormHelperText>\r\n          <RichTextEditor getContentFromRTE={getContentFromRTE} />\r\n        </FormControl>\r\n        <FormControl fullWidth>\r\n          <Button disabled={!isValid || loadingProd} variant=\"contained\" color=\"primary\" type=\"submit\" onClick={handleSubmit} align=\"center\">\r\n            {loadingProd ? <CircularProgress /> : \"Thêm sản phẩm\"}\r\n          </Button>\r\n        </FormControl>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n\r\nexport default AddProduct\r\n","import React from 'react'\nimport './NotFoundPage.css'\n\n\nconst NotFoundPage = () => {\n   return (\n      <div className=\"notfoundpage\">\n         <div className=\"notfoundpage__container\">\n            <p>Oops! Đường dẫn này không tồn tại</p>\n            <h1> 404 error</h1>\n            <a href=\"/admin\">Quay lại trang chủ</a>\n         </div>\n      </div>\n   )\n}\n\n\nexport default NotFoundPage\n","import React from 'react'\n\nimport {\n   Grid, Card, CardActions,\n   CardContent, CardMedia, Typography, IconButton\n} from '@material-ui/core'\nimport { Delete, Edit } from '@material-ui/icons'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nconst ProjectItem = ({ project, handleDeleteProject }) => {\n   const history = useHistory()\n   const { pathname } = useLocation()\n   return (\n      <Grid item md={4} sm={6} xs={12} className='project__item'>\n         <Card>\n            <CardMedia\n               component=\"img\"\n               height=\"140px\"\n               image={project.projectThumb[0].url}\n               alt=\"project\"\n            />\n            <CardContent>\n               <Typography\n                  gutterBottom\n                  variant=\"h5\"\n                  component=\"div\">\n                  {project.title.slice(0, 40) + \"...\"}\n               </Typography>\n            </CardContent>\n            <CardActions >\n               <IconButton\n                  color=\"primary\"\n                  onClick={() => history.push(`${pathname}/update-project/${project._id}`)}>\n                  <Edit />\n               </IconButton>\n               <IconButton\n                  color=\"secondary\"\n                  onClick={() => handleDeleteProject(project._id)}>\n                  <Delete />\n               </IconButton>\n            </CardActions>\n         </Card>\n      </Grid >\n   )\n}\n\nexport default ProjectItem","import { Grid, InputAdornment, FormControl, InputLabel, OutlinedInput } from '@material-ui/core'\nimport { Search } from '@material-ui/icons'\nimport React, { Fragment, useState, useRef, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteProjectById, fetchProjects, filterProject } from '../../redux/async-actions/project.action'\nimport ProjectItem from './item.project'\nimport './project.css'\n\nconst Project = () => {\n   const projects = useSelector(state => state.project.projects)\n   const dispatch = useDispatch()\n   const typingTimeOutRef = useRef(null)\n   const [searchTerm, setSearchTerm] = useState()\n\n   const handleSearch = (e) => {\n      let value = e.target.value\n      setSearchTerm(value)\n      if (typingTimeOutRef.current) {\n         clearTimeout(typingTimeOutRef.current)\n      }\n      typingTimeOutRef.current = setTimeout(() => {\n         if (value === '') return dispatch(fetchProjects())\n         dispatch(filterProject(value))\n      }, 500)\n   }\n\n   const handleDeleteProject = (projectId) => {\n      dispatch(deleteProjectById(projectId))\n   }\n\n   useEffect(() => {\n      dispatch(fetchProjects())\n   }, [dispatch])\n\n   return (\n      <Fragment>\n         <div className='project__filterbar'>\n            <FormControl sx={{ m: 1, width: '25ch' }} onChange={handleSearch} md={{ width: '5rem ' }} variant=\"outlined\">\n               <InputLabel htmlFor=\"outlined-adornment-password\">Tìm kiếm bài viết...</InputLabel>\n               <OutlinedInput\n                  id=\"outlined-adornment-password\"\n                  endAdornment={\n                     <InputAdornment position=\"end\">\n                        <Search />\n                     </InputAdornment>\n                  }\n                  label=\"Password\"\n               />\n            </FormControl>\n         </div>\n         <Grid container className='project__posts' justify='space-evenly'>\n            {projects && projects.map(project => <ProjectItem handleDeleteProject={handleDeleteProject}\n               project={project} key={project._id} />)}\n         </Grid>\n      </Fragment>\n   )\n}\n\nexport default Project","import React, { useState, useRef } from 'react'\nimport { Container, FormControl, FormGroup, FormHelperText, TextField, Button, CircularProgress } from '@material-ui/core'\nimport './project.css'\nimport { useHistory } from 'react-router-dom'\nimport { createProject } from '../../redux/async-actions/project.action'\nimport RichTextEditor from '../../components/RichTextEditor';\nimport ImageUploadComponent from '../../components/ImageUpload'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst AddProject = () => {\n   const history = useHistory()\n   const dispatch = useDispatch()\n   const contentRef = useRef(null)\n   const loadingProj = useSelector(state => state.project.loading)\n   const [images, setImages] = useState([])\n   const [title, setTitle] = useState('')\n   const [isValid, setIsValid] = useState(false)\n\n   // Xử lý image vào state\n   const handleFile = (imageList) => {\n      setImages(imageList)\n      validateProjectForm()\n   }\n   // Set value từ Rich Text Editor\n   const getContentFromRTE = (value) => {\n      contentRef.current = value\n      validateProjectForm()\n   }\n\n   // Check validate form \n   const validateProjectForm = () => {\n      if (!title ||\n         images.length !== 1 ||\n         contentRef.current === ''\n      ) setIsValid(false)\n      else setIsValid(true)\n   }\n   //Submit Form\n   const handleSubmitProject = () => {\n      if (!isValid) return\n      let _formData = new FormData()\n      _formData.append('title', title)\n      _formData.append('content', contentRef.current)\n      images.forEach(image => _formData.append('projectThumb', image.data_url))\n      dispatch(createProject(_formData, history))\n   }\n\n\n   return (\n      <Container style={{ marginTop: \"3rem\" }} maxWidth=\"md\">\n         <FormGroup style={{ border: \"1px dotted #535c68\", padding: \"1rem 1.5rem\" }}>\n            <FormControl name='title' onChange={e => {\n               setTitle(e.target.value)\n               validateProjectForm()\n            }}>\n               <FormHelperText>Nhập tiêu đề bài viết</FormHelperText>\n               <TextField variant=\"outlined\" label=\"Tiêu đề\" />\n            </FormControl>\n            <FormControl fullWidth>\n               <FormHelperText> Chọn ảnh tiêu đề bài viết </FormHelperText>\n               <ImageUploadComponent maxNumber={1} isMultiple={false} handleFile={handleFile} />\n            </FormControl>\n            <FormControl fullWidth>\n               <FormHelperText perText>Nhập nội dung bài viết</FormHelperText>\n               <RichTextEditor getContentFromRTE={getContentFromRTE} />\n            </FormControl>\n            <FormControl onClick={handleSubmitProject}>\n               <Button disabled={!isValid || loadingProj} style={{ marginTop: \"2rem\" }} color=\"primary\" variant=\"contained\" >\n                  {loadingProj ? <CircularProgress /> : 'Lưu bài viết'}</Button>\n            </FormControl>\n         </FormGroup>1\n      </Container>\n   )\n\n}\n\nexport default AddProject","import React, { useState, useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { fetchProjectById, updateProjectById } from '../../redux/async-actions/project.action'\nimport {\n   FormGroup, FormControl,\n   FormHelperText, TextField,\n   Grid, Button, CircularProgress\n} from '@material-ui/core'\nimport ImageUploadComponent from '../../components/ImageUpload'\nimport RichTextEditor from '../../components/RichTextEditor'\n\n\nconst DetailProject = () => {\n\n   const { projectId } = useParams()\n   const history = useHistory()\n   const dispatch = useDispatch()\n\n   const project = useSelector(state => state.project.projectById)\n   const loadingProj = useSelector(state => state.project.loading)\n\n   const [title, setTitle] = useState('')\n   const [isValid, setIsValid] = useState(false)\n   const [thumb, setThumb] = useState([])\n\n   const contentRef = useRef(null)\n\n   useEffect(() => {\n      dispatch(fetchProjectById(projectId))\n   }, [dispatch, projectId])\n\n   const getContentFromRTE = (value) => {\n      contentRef.current = value\n      validateProjectForm()\n   }\n\n   const handleTitleChange = (e) => {\n      setTitle(e.target.value)\n      validateProjectForm()\n   }\n\n   const validateProjectForm = () => {\n      if (contentRef.current === '') setIsValid(false)\n      else setIsValid(true)\n   }\n\n   const handleFile = (imageList) => {\n      setThumb(imageList)\n   }\n\n   const handleUpdateProject = () => {\n      if (!isValid) return\n      let _formData = new FormData()\n      _formData.append('title', title)\n      _formData.append('content', contentRef.current)\n      thumb.forEach(t => _formData.append('projectThumb', t.data_url))\n      dispatch(updateProjectById(projectId, _formData, history))\n   }\n\n\n   return project && (<Grid container>\n      <FormGroup style={{ border: \"1px dotted #535c68\", padding: \"1rem 1.5rem\" }}>\n         <Grid item md={8} sm={6}>\n            <FormControl name='title'>\n               <FormHelperText>Nhập tiêu đề bài viết</FormHelperText>\n               <TextField defaultValue={project.title}\n                  variant=\"outlined\" label=\"Tiêu đề\"\n                  onChange={handleTitleChange}\n               />\n            </FormControl>\n\n            <FormControl fullWidth>\n               <FormHelperText>Nhập nội dung bài viết</FormHelperText>\n               <RichTextEditor getContentFromRTE={getContentFromRTE} defaultValue={project.content} />\n            </FormControl>\n         </Grid>\n         <Grid item md={4} sm={6}>\n            <FormControl fullWidth>\n               <img width=\"100px\" height=\"120px\" alt={project.title} src={project.projectThumb[0].url} />\n               <FormHelperText> Chọn ảnh tiêu đề bài viết </FormHelperText>\n               <FormHelperText> * Chỉ được chọn 1 ảnh</FormHelperText>\n\n               <ImageUploadComponent maxNumber={1} isMultiple={false} handleFile={handleFile} imageList={thumb} />\n            </FormControl>\n            <FormControl onClick={handleUpdateProject}>\n               <Button disabled={!isValid || loadingProj}\n                  style={{ marginTop: \"2rem\" }}\n                  color=\"primary\" variant=\"contained\" >\n                  {loadingProj ? <CircularProgress /> : \"Lưu bài viết\"} </Button>\n            </FormControl>\n         </Grid>\n      </FormGroup >\n   </Grid >\n   )\n}\n\nexport default DetailProject","import { restConnector } from \"./baseURL.services\";\nclass VideoServices {\n   updateVideoURL(videoUrl) {\n      return restConnector({\n         url: '/api/video/updateURL',\n         method: \"POST\",\n         data: { videoUrl }\n      })\n   }\n   fetchVideoURL() {\n      return restConnector({\n         url: '/api/video/getURL',\n         method: \"GET\"\n      })\n   }\n\n}\nexport default new VideoServices()","import React, { useEffect, useState } from \"react\"\nimport { Button, Container, TextField } from \"@material-ui/core\"\nimport { updateVideoURL } from \"../../redux/async-actions/video.action\"\nimport videoServices from \"../../services/video.services\"\nconst Video = () => {\n   const [videoURL, setVideoURL] = useState('')\n   const handleChange = e => {\n      setVideoURL(e.target.value)\n   }\n   const handleSubmit = () => {\n      if (videoURL === '') return\n      updateVideoURL(videoURL)\n   }\n   const fetchUrl = async () => {\n      const res = await videoServices.fetchVideoURL()\n      setVideoURL(res.data[0].videoUrl)\n   }\n\n   useEffect(() => {\n      fetchUrl()\n   }, [])\n   return (\n      <Container maxWidth=\"md\">\n         <TextField fullWidth\n            variant='filled'\n            value={videoURL ? videoURL : null}\n            onChange={handleChange} />\n         <Button style={{ marginTop: \"20px\" }} fullWidth variant=\"contained\" color='primary' onClick={handleSubmit}>Thay đổi URL</Button>\n      </Container>\n\n   )\n}\n\nexport default Video","import { toast } from \"react-toastify\"\nimport VideoServices from \"../../services/video.services\"\n\nexport const updateVideoURL = (url) => {\n   VideoServices.updateVideoURL(url)\n      .then(res => toast.success(res.data.message))\n      .catch(err => toast.error(err.response.data.message))\n}\n","import React, { Fragment } from \"react\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport \"./App.css\"\nimport Main from \"./Screens/Main\"\nimport Navbar from \"./Layouts/navbar\"\nimport { Route, Switch, useLocation } from \"react-router-dom\"\nimport Authentication from \"./Screens/Authentication\"\nimport Categories from \"./Screens/Categories\"\nimport Footer from \"./Layouts/footer\"\nimport Brands from \"./Screens/Brands\"\nimport { ToastContainer, toast } from \"react-toastify\"\nimport DetailProduct from \"./Screens/Products/detail.products\"\nimport AuthProvider from \"./context/AuthProvider\"\nimport SideList from \"./components/sidelist\"\nimport { Grid } from \"@material-ui/core\"\nimport Products from \"./Screens/Products/table.products\"\nimport AddProduct from \"./Screens/Products/add.product\"\nimport NotFoundPage from \"./Screens/NotFoundPage\"\nimport Project from \"./Screens/Project/project\"\nimport AddProject from \"./Screens/Project/add.project\"\nimport DetailProject from \"./Screens/Project/detail.project\"\nimport Video from \"./Screens/Video/Video\"\n\nfunction App() {\n  const location = useLocation()\n\n\n  return (\n    <Fragment>\n      {location.pathname === '/login' ? null : <Navbar />}\n      <ToastContainer\n        position={toast.POSITION.TOP_RIGHT}\n        autoClose={3000}\n        hideProgressBar\n      />\n      <AuthProvider>\n        <Grid container>\n          {location.pathname === '/login' ? null : (<Grid item md={2} >\n            <SideList />\n          </Grid>)}\n          <Grid item md={10}>\n            <Switch>\n              <Route path=\"/projects\" exact component={Project} />\n              <Route path=\"/projects/update-project/:projectId\" exact component={DetailProject} />\n              <Route path=\"/projects/add-project\" exact component={AddProject} />\n              <Route path=\"/products\" exact component={Products} />\n              <Route path=\"/products/add-product\" exact component={AddProduct} />\n              <Route path=\"/products/update-product/:productId\" exact component={DetailProduct} />\n              <Route path=\"/categories\" exact component={Categories} />\n              <Route path=\"/brands\" exact component={Brands} />\n              <Route path=\"/video\" exact component={Video} />\n              <Route path=\"/login\" exact component={Authentication} />\n              <Route path=\"/admin\" exact component={Main} />\n              <Route path=\"/\" exact component={Main} />\n              <Route path=\"*\" exact component={NotFoundPage} />\n            </Switch>\n          </Grid>\n        </Grid>\n      </AuthProvider>\n      {location.pathname === '/login' ? null : <Footer />}\n    </Fragment>\n  )\n}\n\nexport default App\n","import { LOGIN, LOGOUT } from \"../async-actions/actionType\"\r\nimport jwt from 'jsonwebtoken'\r\n\r\nlet initialState = {\r\n  profile: {}\r\n}\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      state.profile = jwt.verify(action.payload, 'LTTNElectric')\r\n      localStorage.setItem('profile', JSON.stringify(state.profile))\r\n      return { ...state }\r\n    case LOGOUT:\r\n      localStorage.clear()\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default userReducer\r\n","import {\r\n  FETCH_BRANDS,\r\n  ADD_BRAND,\r\n} from \"../async-actions/actionType\"\r\n\r\nlet initialState = {\r\n  brands: null,\r\n}\r\nconst brandReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BRANDS:\r\n      return { ...state, brands: action.payload }\r\n    case ADD_BRAND:\r\n      let temp = [...state.brands, action.payload]\r\n      return { ...state, brands: temp }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default brandReducer\r\n","import {\r\n  FETCH_CATEGORIES,\r\n  ADD_CATEGORY,\r\n} from \"../async-actions/actionType\"\r\n\r\nlet initialState = {\r\n  categories: null,\r\n}\r\nconst categoryReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CATEGORIES:\r\n      state.categories = action.payload\r\n      return { ...state }\r\n    case ADD_CATEGORY:\r\n      let resultArr = [...state.categories, action.payload]\r\n      return { ...state, categories: resultArr }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default categoryReducer\r\n","import {\r\n  FETCH_PRODUCTS,\r\n  DELETE_PRODUCT_BY_ID,\r\n  FETCH_PRODUCT_BY_ID,\r\n  LOADING_PRODUCTS,\r\n  UPDATE_PRODUCT_BY_ID,\r\n  CREATE_PRODUCT\r\n} from \"../async-actions/actionType\"\r\n\r\nlet initialState = {\r\n  products: null,\r\n  productById: null,\r\n  loading: false\r\n}\r\nconst productReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_PRODUCTS:\r\n      return { ...state, loading: true }\r\n    case FETCH_PRODUCTS:\r\n      state.products = action.payload\r\n      return { ...state, loading: false }\r\n    case FETCH_PRODUCT_BY_ID:\r\n      state.productById = action.payload\r\n      return { ...state, loading: false }\r\n    case CREATE_PRODUCT:\r\n      return { ...state, loading: false }\r\n    case UPDATE_PRODUCT_BY_ID:\r\n      return { ...state, loading: false }\r\n    case DELETE_PRODUCT_BY_ID:\r\n      let deletedArr = state.products.filter((product) => product._id !== action.payload)\r\n      return { ...state, products: deletedArr, loading: false }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default productReducer\r\n","import { ADD_PROJECT, DELETE_PROJECT_BY_ID, FETCH_PROJECTS, FETCH_PROJECT_BY_ID, FILTER_PROJECTS, LOADING_PROJECTS, UPDATE_PROJECT } from \"../async-actions/actionType\"\n\nlet initialState = {\n   projects: null,\n   projectById: null,\n   loading: false\n}\n\nconst projectReducer = (state = initialState, action) => {\n   switch (action.type) {\n      case LOADING_PROJECTS:\n         return { ...state, loading: true }\n      case ADD_PROJECT:\n         return { ...state, loading: false }\n      case UPDATE_PROJECT:\n         return { ...state, loading: false }\n      case FETCH_PROJECTS:\n         return { ...state, projects: action.payload }\n      case FETCH_PROJECT_BY_ID:\n         return { ...state, projectById: action.payload }\n      case FILTER_PROJECTS:\n         let resultFilter = state.projects.filter(project => project.slug.toLowerCase().includes(action.payload.toLowerCase()))\n         return { ...state, projects: resultFilter }\n      case DELETE_PROJECT_BY_ID:\n         let resultArr = state.projects.filter(project => project._id !== action.payload)\n         return { ...state, projects: resultArr }\n      default:\n         return state\n   }\n}\n\nexport default projectReducer","import { combineReducers } from \"redux\"\r\nimport userReducer from \"./user.reducer\"\r\nimport brandReducer from \"./brand.reducer\"\r\nimport categoryReducer from \"./category.reducer\"\r\nimport productReducer from \"./products.reducer\"\r\nimport projectReducer from './project.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  brand: brandReducer,\r\n  category: categoryReducer,\r\n  product: productReducer,\r\n  project: projectReducer\r\n})\r\nexport default rootReducer\r\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from \"redux-thunk\";\nimport rootReducer from './reducers/root.reducer';\n\nconst initialState = {}\nconst middlewares = [thunk]\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middlewares)))\nexport default store","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport { Provider } from \"react-redux\"\r\nimport { BrowserRouter } from \"react-router-dom\"\r\nimport store from \"./redux/store\"\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}