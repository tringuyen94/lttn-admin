{"version":3,"sources":["img/product.jpg","img/category.png","img/brand.jpg","img/logoLTTN.jpg","Screens/Main/index.jsx","services/baseURL.services.jsx","services/user.services.jsx","Layouts/navbar.jsx","redux/async-actions/user.action.jsx","redux/async-actions/actionType.jsx","Screens/Authentication/index.jsx","services/category.services.jsx","redux/async-actions/category.action.jsx","Screens/Categories/table.categories.jsx","Screens/Categories/index.jsx","Layouts/footer.jsx","services/brand.services.jsx","redux/async-actions/brand.action.jsx","Screens/Brands/table.brands.jsx","Screens/Brands/index.jsx","services/product.services.jsx","redux/async-actions/product.action.jsx","components/ImageUpload.jsx","components/RichTextEditor.jsx","Screens/Products/detail.products.jsx","context/AuthProvider.js","components/sidelistitem.jsx","components/sidelist.jsx","Screens/Products/table.products.jsx","Screens/Products/add.product.jsx","Screens/NotFoundPage/index.jsx","services/project.services.jsx","redux/async-actions/project.action.jsx","Screens/Project/item.project.jsx","Screens/Project/project.jsx","Screens/Project/add.project.jsx","Screens/Project/detail.project.jsx","App.js","serviceWorker.js","redux/reducers/user.reducer.jsx","redux/reducers/brand.reducer.jsx","redux/reducers/category.reducer.jsx","redux/reducers/products.reducer.jsx","redux/reducers/project.reducer.jsx","redux/reducers/root.reducer.jsx","index.js"],"names":["module","exports","Main","history","useHistory","Grid","container","justify","className","item","md","Card","CardActionArea","onClick","push","alt","src","require","CardContent","Typography","gutterBottom","variant","align","component","domain","restConnector","axios","create","baseURL","credentials","url","method","data","Navbar","dispatch","useDispatch","Button","console","log","type","toast","info","logOut","endIcon","Authentication","useState","setCredentials","handleChange","e","target","name","value","onSubmit","preventDefault","UserService","login","then","res","payload","jwt","success","message","catch","err","error","response","autoComplete","TextField","autoFocus","label","fullWidth","onChange","required","color","categoryId","fetchCategories","CategoryServices","actFetchCategories","CategoryTable","categories","useSelector","state","category","isUpdate","setIsUpdate","nameCategory","setNameCategory","useEffect","columns","options","filter","display","sort","customBodyRender","tableMeta","updateValue","empty","IconButton","updateCategoryById","go","rowData","Save","startIcon","Edit","title","undefined","filterType","selectableRows","Categories","addCategory","Footer","width","brandId","fetchBrands","BrandServices","actFetchBrands","BrandTable","brands","brand","nameBrand","setNameBrand","isEdit","setIsEdit","updateBrandById","Brands","addBrand","productId","productData","actFetchProductById","actFetchProducts","ImageUploadComponent","maxNumber","isMultiple","handleFile","imageList","images","setImages","multiple","dataURLKey","onImageUpload","onImageUpdate","onImageRemove","errors","isDragging","dragProps","FormHelperText","style","PhotoCamera","fontSize","map","image","index","key","Delete","RichTextEditor","getContentFromRTE","defaultValue","editor","useRef","ref","tabIndex","config","readonly","newContent","DetailProduct","useParams","productById","product","contentRef","ProductServices","fetchProductById","result","productImages","productValue","setProductValue","disabledSubmitImage","setDisabledSubmitImage","isValid","setIsValid","FormGroup","FormControl","margin","InputLabel","htmlFor","NativeSelect","inputProps","id","_id","current","detail","capacity","isNewProduct","padding","disabled","updateProductById","ImageUpload","_formData","FormData","i","length","append","file","productImage","updateImageProduct","updateProductImage","AuthContext","createContext","AuthProvider","children","profile","setProfile","JSON","parse","localStorage","getItem","Provider","SideListItem","tabSelected","setTabSelected","icon","route","ListItem","withStyles","root","backgroundColor","selected","MuiListItem","button","ListItemIcon","ListItemText","primary","HomeRounded","ComputerRounded","Add","AppsRounded","PostAdd","BlurOn","SideList","location","useLocation","pathname","List","Products","products","fetchProducts","option","height","marginLeft","deleteProductById","rowsPerPage","AddProduct","validateValue","Select","native","placeholder","formData","createProduct","NotFoundPage","href","projectData","projectId","newThumb","fetchProjects","ProjectServices","ProjectItem","project","handleDeleteProject","sm","xs","CardMedia","projectThumb","slice","CardActions","Project","projects","typingTimeOutRef","setSearchTerm","deleteProjectById","sx","m","clearTimeout","setTimeout","searchTerm","filterProject","OutlinedInput","endAdornment","InputAdornment","position","Search","AddProject","projectValue","setProjectValue","validateProjectForm","Container","marginTop","maxWidth","border","perText","createProject","DetailProject","projectById","setTitle","thumb","setThumb","isThumbValid","setIsThumbValid","fetchProjectById","content","onBlur","updateProjectById","updateProjectThumb","App","POSITION","TOP_RIGHT","autoClose","hideProgressBar","path","exact","Boolean","window","hostname","match","initialState","userReducer","action","verify","setItem","stringify","clear","brandReducer","temp","categoryReducer","resultArr","productReducer","deletedArr","projectReducer","resultFilter","slug","toLowerCase","includes","rootReducer","combineReducers","user","middlewares","thunk","store","createStore","compose","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f46af72.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/product.8b7b84e0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/category.5b7f3c2a.png\";","module.exports = __webpack_public_path__ + \"static/media/brand.f96e992c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logoLTTN.66c68fd8.jpg\";","import React from \"react\"\r\nimport {\r\n  Grid, Card,\r\n  CardActionArea,\r\n  Typography, CardContent\r\n} from '@material-ui/core'\r\nimport './main.css'\r\nimport { useHistory } from \"react-router\"\r\n\r\nconst Main = () => {\r\n  const history = useHistory()\r\n  return (\r\n    <Grid container justify='space-between' className=\"main\">\r\n      <Grid item md={4}>\r\n        <Card className='main__card'>\r\n          <CardActionArea onClick={() =>history.push('/products')}>\r\n            <img alt=\"product\" src={require('../../img/product.jpg')} />\r\n            <CardContent className='card__content'>\r\n              <Typography gutterBottom variant=\"h5\" align='center' component=\"h2\">\r\n                Sản phẩm\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item md={4}>\r\n        <Card className='main__card'>\r\n          <CardActionArea onClick={() =>history.push('/categories')} >\r\n            <img alt=\"category\" src={require('../../img/category.png')} />\r\n            <CardContent className='card__content'>\r\n              <Typography gutterBottom variant=\"h5\" align='center' component=\"h2\">\r\n                Loại sản phẩm\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item md={4}>\r\n        <Card className='main__card'>\r\n          <CardActionArea onClick={() =>history.push('/brands')}>\r\n            <img alt=\"brand\" src={require('../../img/brand.jpg')} />\r\n            <CardContent className='card__content'>\r\n              <Typography gutterBottom variant=\"h5\" align='center' component=\"h2\">\r\n                Nhãn hàng\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Main\r\n","import axios from \"axios\"\r\n\r\n\r\n\r\n\r\n// export const domain =\"http://localhost:9000\"\r\nexport const domain =\"http://lttnelectric.com:9000\"\r\n\r\nexport const restConnector = axios.create({\r\n  baseURL: domain\r\n})","import { restConnector } from \"./baseURL.services\"\r\n\r\nclass UserService {\r\n  login(credentials) {\r\n    return restConnector({\r\n      url: `/api/users/login`,\r\n      method: `POST`,\r\n      data: credentials\r\n    })\r\n  }\r\n}\r\nexport default new UserService()\r\n","import React from \"react\"\r\nimport { Button } from \"@material-ui/core\"\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { logOut } from \"../redux/async-actions/user.action\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport './navbar.css'\r\n\r\nconst Navbar = () => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <h1 className='admin-navivation' onClick={() => history.push('/admin')}>admin</h1>\r\n      <Button\r\n        onClick={() => dispatch(logOut(history))}\r\n        variant=\"outlined\"\r\n        endIcon={<ExitToAppIcon />}\r\n      >\r\n        Đăng xuất\r\n      </Button>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import { LOGIN, LOGOUT } from \"./actionType\"\r\nimport UserService from \"../../services/user.services\"\r\nimport { toast } from \"react-toastify\"\r\n\r\nexport const login = (credentials, history) => {\r\n  return (dispatch) => {\r\n    UserService.login(credentials)\r\n      .then((res) => {\r\n        dispatch({ type: LOGIN, payload: res.data.jwt })\r\n        history.push('/admin')\r\n        toast.success(res.data.message)\r\n      })\r\n      .catch((err) => toast.error(err.response.data.message))\r\n  }\r\n}\r\n\r\nexport const logOut = (history) => {\r\n  console.log('log out here')\r\n  return (dispatch) => {\r\n    dispatch({ type: LOGOUT })\r\n    history.push('/login')\r\n    toast.info('Đã đăng xuất khỏi hệ thống')\r\n  }\r\n}","//============================USER=========================\r\nexport const LOGIN = \"LOGIN\"\r\nexport const LOGOUT = \"LOGOUT\"\r\n//============================PRODUCT=========================\r\nexport const FETCH_PRODUCTS = \"FETCH_PRODUCTS\"\r\nexport const FETCH_PRODUCT_BY_ID = \"FETCH_PRODUCT_BY_ID\"\r\nexport const DELETE_PRODUCT_BY_ID = \"DELETE_PRODUCT_BY_ID\"\r\n//============================BRAND=========================\r\nexport const FETCH_BRANDS = \"FETCH_BRAND\"\r\nexport const ADD_BRAND = \"ADD_BRAND\"\r\nexport const UPDATE_BRAND_BY_ID = \"UPDATE_BRAND_BY_ID\"\r\n//============================CATEGORY=========================\r\nexport const FETCH_CATEGORIES = \"FETCH_CATEGORIES\"\r\nexport const ADD_CATEGORY = \"ADD_CATEGORY\"\r\n//============================PROJECT=========================\r\nexport const FETCH_PROJECTS=\"FETCH_PROJECTS\"\r\nexport const FETCH_PROJECT_BY_ID=\"FETCH_PROJECT_BY_ID\"\r\nexport const FILTER_PROJECTS=\"FILTER_PROJECTS\"\r\nexport const DELETE_PROJECT_BY_ID=\"DELETE_PROJECT_BY_ID\"\r\n","import React, { useState } from \"react\"\r\nimport { login } from \"../../redux/async-actions/user.action\"\r\nimport { TextField, Button } from \"@material-ui/core\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport './authentication.css'\r\nconst Authentication = () => {\r\n  const [credentials, setCredentials] = useState()\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const handleChange = (e) => {\r\n    setCredentials({\r\n      ...credentials,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n  const handleLogin = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(credentials, history))\r\n  }\r\n  return (\r\n    <div className=\"authentication\">\r\n      <form onSubmit={handleLogin}\r\n        className=\"loginform\"\r\n        autoComplete=\"off\">\r\n        <TextField\r\n          className=\"input\"\r\n          variant=\"outlined\"\r\n          name=\"email\"\r\n          autoFocus={true}\r\n          label=\"Email\"\r\n          fullWidth\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <br />\r\n        <TextField\r\n          type=\"password\"\r\n          className=\"input\"\r\n          variant=\"outlined\"\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          fullWidth\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <br />\r\n        <Button variant=\"contained\"\r\n          fullWidth\r\n          color=\"primary\" type=\"submit\">\r\n          Login\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Authentication\r\n","import { restConnector } from \"./baseURL.services\"\r\nclass CategoryServices {\r\n  fetchCategories() {\r\n    return restConnector({\r\n      url: `api/categories`,\r\n      method: \"get\",\r\n    })\r\n  }\r\n  addCategory(value) {\r\n    return restConnector({\r\n      url: `api/categories/create-category`,\r\n      method: \"post\",\r\n      data: { 'nameCategory': value },\r\n    })\r\n  }\r\n  updateCategoryById(value, categoryId) {\r\n    return restConnector({\r\n      url: `api/categories/update-category-by-id/${categoryId}`,\r\n      method: \"PUT\",\r\n      data: value,\r\n    })\r\n  }\r\n}\r\nexport default new CategoryServices()\r\n","import {\r\n  FETCH_CATEGORIES,\r\n  ADD_CATEGORY,\r\n} from \"./actionType\"\r\nimport CategoryServices from \"../../services/category.services\"\r\nimport { toast } from \"react-toastify\"\r\n\r\nexport const fetchCategories = () => {\r\n  return (dispatch) => {\r\n    CategoryServices.fetchCategories()\r\n      .then((res) => {\r\n        dispatch(actFetchCategories(res.data))\r\n      })\r\n      .catch((err) => console.log)\r\n  }\r\n}\r\nexport const addCategory = (value) => {\r\n  return (dispatch) => {\r\n    CategoryServices.addCategory(value)\r\n      .then((res) => {\r\n        dispatch({ type: ADD_CATEGORY, payload: { nameCategory: value } })\r\n        toast.success(res.data.message)\r\n      })\r\n      .catch((err) => toast.error(err.response.data.message))\r\n  }\r\n}\r\n\r\nexport const updateCategoryById = (value, categoryId,history) => {\r\n  return dispatch => {\r\n    CategoryServices.updateCategoryById(value, categoryId)\r\n      .then((res) => {\r\n        history.go(0)\r\n        toast.success(res.data.message)\r\n      })\r\n      // .catch((err) => toast.error(err.response.data.message))\r\n  }\r\n}\r\n\r\nexport const actFetchCategories = (data) => {\r\n  return {\r\n    type: FETCH_CATEGORIES,\r\n    payload: data,\r\n  }\r\n}\r\n","import React, { Fragment, useEffect, useState } from \"react\"\r\nimport MUIDataTable from \"mui-datatables\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { fetchCategories } from \"../../redux/async-actions/category.action\"\r\nimport { Button, IconButton, TextField } from \"@material-ui/core\"\r\nimport { updateCategoryById } from \"../../redux/async-actions/category.action\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Save, Edit } from \"@material-ui/icons\"\r\n\r\nconst CategoryTable = () => {\r\n  const dispatch = useDispatch()\r\n  const categories = useSelector(state => state.category.categories)\r\n \r\n  const [isUpdate, setIsUpdate] = useState(false)\r\n  const [nameCategory, setNameCategory] = useState()\r\n  const history= useHistory()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCategories())\r\n  }, [dispatch])\r\n\r\n\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setNameCategory({\r\n      nameCategory: e.target.value,\r\n    })\r\n  }\r\n\r\n\r\n  const columns = [\r\n    {\r\n      name: \"_id\",\r\n      label: \"Id\",\r\n      options: {\r\n        filter: false,\r\n        display: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"nameCategory\",\r\n      label: \"Loại sản phẩm\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"Update\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        display: isUpdate,\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <div>\r\n              <TextField label=\"Nhập thay đổi\" onChange={handleChange} />\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"Setting\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        empty: true,\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return isUpdate ? (\r\n            <IconButton\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                dispatch(updateCategoryById(\r\n                  nameCategory,\r\n                  tableMeta.rowData[0],\r\n                  history\r\n                ))\r\n              }}\r\n            >\r\n              <Save />\r\n            </IconButton>\r\n          ) : (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<Edit />}\r\n              onClick={() => setIsUpdate(true)}\r\n            >\r\n              Cập nhật\r\n            </Button>\r\n          )\r\n        },\r\n      },\r\n    },\r\n  ]\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    selectableRows: \"none\",\r\n\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <MUIDataTable\r\n        title={\"Các loại sản phẩm \"}\r\n        data={categories ? categories : undefined}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default CategoryTable\r\n","import React, { Fragment, useState } from \"react\"\r\nimport CategoryTable from \"./table.categories\"\r\nimport { addCategory } from \"../../redux/async-actions/category.action\"\r\nimport { Button, TextField } from \"@material-ui/core\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport \"./category.css\"\r\nconst Categories = () => {\r\n  const [nameCategory, setNameCategory] = useState('')\r\n  const dispatch = useDispatch()\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    dispatch(addCategory(nameCategory))\r\n    setNameCategory('')\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className=\"category__container\">\r\n        <TextField\r\n          variant=\"filled\"\r\n          label=\"Nhập loại sản phẩm\"\r\n          name=\"nameCategory\"\r\n          value={nameCategory}\r\n          onChange={(e) => setNameCategory(e.target.value)}\r\n        />\r\n        <Button color=\"primary\" variant=\"outlined\" onClick={handleSubmit}>\r\n          Thêm\r\n        </Button>\r\n      </div>\r\n      <CategoryTable />\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Categories\r\n","import React from \"react\"\r\nimport './footer.css'\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer text-center\">\r\n        <p className=\"footer-company py-1 my-1\">\r\n          Công ty TNHH Thương mại điện tử LTTN Electric{\" \"}\r\n        </p>\r\n          <img\r\n            src={require(\"../img/logoLTTN.jpg\")}\r\n            alt=\"\"\r\n            width=\"40px\"\r\n            className=\"rounded-circle\"\r\n          />\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { restConnector } from \"./baseURL.services\"\r\nclass BrandServices {\r\n  fetchBrands() {\r\n    return restConnector({\r\n      url: `api/brands/get-brands`,\r\n      method: \"get\",\r\n    })\r\n  }\r\n  addBrand(value) {\r\n    return restConnector({\r\n      url: `api/brands/create-brand`,\r\n      method: \"post\",\r\n      data: { 'nameBrand': value },\r\n    })\r\n  }\r\n  updateBrandById(value, brandId) {\r\n    return restConnector({\r\n      url: `api/brands/update-brand-by-id/${brandId}`,\r\n      method: \"PUT\",\r\n      data: value,\r\n    })\r\n  }\r\n}\r\nexport default new BrandServices()\r\n","import {\r\n  FETCH_BRANDS,\r\n  ADD_BRAND,\r\n} from \"./actionType\"\r\nimport BrandServices from \"../../services/brand.services\"\r\nimport { toast } from \"react-toastify\"\r\n\r\nexport const fetchBrands = () => {\r\n  return (dispatch) => {\r\n    BrandServices.fetchBrands()\r\n      .then((res) => {\r\n        dispatch(actFetchBrands(res.data))\r\n      })\r\n      .catch((err) => console.log)\r\n  }\r\n}\r\nexport const addBrand = (value) => {\r\n  return (dispatch) => {\r\n    BrandServices.addBrand(value)\r\n      .then((res) => {\r\n        dispatch({ type: ADD_BRAND, payload: res.data.brand })\r\n        toast.success(res.data.message)\r\n      })\r\n      .catch((err) => toast.error(err.response.data.message))\r\n  }\r\n}\r\n\r\nexport const updateBrandById = (value, brandId, history) => {\r\n  BrandServices.updateBrandById(value, brandId)\r\n    .then((res) => {\r\n      history.go(0)\r\n      toast.success(res.data.message)\r\n    })\r\n    .catch((err) => toast.error(err.response.data.message))\r\n}\r\n\r\n\r\nexport const actFetchBrands = (data) => {\r\n  return {\r\n    type: FETCH_BRANDS,\r\n    payload: data,\r\n  }\r\n}\r\n\r\n","import React, { Fragment, useEffect, useState } from \"react\"\r\nimport MUIDataTable from \"mui-datatables\"\r\nimport {\r\n  fetchBrands,\r\n  updateBrandById,\r\n} from \"../../redux/async-actions/brand.action\"\r\nimport { Button, IconButton, TextField } from \"@material-ui/core\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Edit, Save } from \"@material-ui/icons\"\r\n\r\nconst BrandTable = () => {\r\n  const dispatch = useDispatch()\r\n  const brands = useSelector(state => state.brand.brands)\r\n  const history = useHistory()\r\n  const [nameBrand, setNameBrand] = useState()\r\n  const [isEdit, setIsEdit] = useState(false)\r\n  const handleChange = (e) => {\r\n    setNameBrand({\r\n      nameBrand: e.target.value,\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    dispatch(fetchBrands())\r\n  }, [dispatch])\r\n  const columns = [\r\n    {\r\n      name: \"_id\",\r\n      label: \"Id\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"nameBrand\",\r\n      label: \"Nhãn hàng\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"Update\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        display: isEdit,\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <TextField label=\"Nhập thay đổi\" onChange={handleChange} />\r\n          )\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"Setting\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        empty: true,\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return isEdit ? (\r\n            <IconButton\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                updateBrandById(nameBrand, tableMeta.rowData[0], history)\r\n              }}\r\n            >\r\n              <Save />\r\n            </IconButton>\r\n          ) : (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<Edit />}\r\n                onClick={() => setIsEdit(true)}\r\n              >\r\n                Cập nhật\r\n              </Button>\r\n            </>\r\n          )\r\n        },\r\n      },\r\n    },\r\n  ]\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    selectableRows:\"none\"\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <MUIDataTable\r\n        title={\"Các nhãn hàng\"}\r\n        data={brands ? brands : undefined}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default BrandTable\r\n","import React, { Fragment, useState } from \"react\"\r\nimport BrandTable from \"./table.brands\"\r\nimport { addBrand } from \"../../redux/async-actions/brand.action\"\r\nimport './brand.css'\r\nimport { useDispatch } from \"react-redux\"\r\nimport { Button, TextField } from \"@material-ui/core\"\r\nconst Brands = () => {\r\n  const [nameBrand, setNameBrand] = useState('')\r\n  const dispatch = useDispatch()\r\n  const handleAddBrand = (e) => {\r\n    e.preventDefault()\r\n    dispatch(addBrand(nameBrand))\r\n    setNameBrand('')\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className=\"brand__container\">\r\n        <TextField\r\n          variant=\"filled\"\r\n          label=\"Nhập nhãn hàng\"\r\n          name=\"nameBrand\"\r\n          value={nameBrand}\r\n          onChange={(e) =>setNameBrand(e.target.value)}\r\n        />\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          onClick={handleAddBrand}\r\n        >\r\n          Thêm\r\n        </Button>\r\n      </div>\r\n      <BrandTable />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Brands\r\n","import { restConnector } from \"./baseURL.services\"\r\nclass ProductServices {\r\n  createProduct(value) {\r\n    return restConnector({\r\n      url: `api/products/create-product`,\r\n      method: \"POST\",\r\n      data: value,\r\n    })\r\n  }\r\n  fetchProducts() {\r\n    return restConnector({\r\n      url: `api/products/get-products`,\r\n      method: \"GET\",\r\n    })\r\n  }\r\n  fetchProductById(productId) {\r\n    return restConnector({\r\n      url: `api/products/get-product-by-id/${productId}`,\r\n      method: \"GET\",\r\n    })\r\n  }\r\n  deleteProductById(productId) {\r\n    return restConnector({\r\n      url: `api/products/delete-product/${productId}`,\r\n      method: \"DELETE\",\r\n    })\r\n  }\r\n  updateProductById(productData, productId) {\r\n    return restConnector({\r\n      url: `api/products/update-product/${productId}`,\r\n      method: \"PUT\",\r\n      data: productData,\r\n    })\r\n  }\r\n  updateImageProduct(productData, productId) {\r\n    return restConnector({\r\n      url: `api/products/update-image/${productId}`,\r\n      method: \"PUT\",\r\n      data: productData,\r\n    })\r\n  }\r\n}\r\nexport default new ProductServices()\r\n","import {\r\n  FETCH_PRODUCTS,\r\n  DELETE_PRODUCT_BY_ID,\r\n  FETCH_PRODUCT_BY_ID,\r\n} from \"./actionType\"\r\nimport ProductServices from \"../../services/product.services\"\r\nimport { toast } from \"react-toastify\"\r\n\r\nexport const createProduct = (value, history) => {\r\n  ProductServices.createProduct(value)\r\n    .then((res) => {\r\n      history.push('/products')\r\n      toast.success(res.data.message)\r\n    })\r\n    .catch((err) => toast.error(err.response.data.message))\r\n}\r\nexport const fetchProducts = () => {\r\n  return (dispatch) => {\r\n    ProductServices.fetchProducts()\r\n      .then((res) => {\r\n        dispatch(actFetchProducts(res.data))\r\n      })\r\n      .catch((err) => console.log)\r\n  }\r\n}\r\nexport const fetchProductById = (productId) => {\r\n  return (dispatch) => {\r\n    ProductServices.fetchProductById(productId)\r\n      .then((res) => {\r\n        dispatch(actFetchProductById(res.data))\r\n      })\r\n      .catch((err) => toast.error(err.response.data.message))\r\n  }\r\n}\r\nexport const deleteProductById = (productId) => {\r\n  return (dispatch) => {\r\n    ProductServices.deleteProductById(productId)\r\n      .then((res) => {\r\n        dispatch({ type: DELETE_PRODUCT_BY_ID, payload: productId })\r\n        toast.info(res.data.message)\r\n      })\r\n      .catch((err) => toast.error(err.response.data.message))\r\n  }\r\n}\r\nexport const updateProductById = (productData, productId, history) => {\r\n  ProductServices.updateProductById(productData, productId)\r\n    .then((res) => {\r\n      history.push(\"/products\")\r\n      console.log(res)\r\n      toast.info(res.data.message)\r\n    })\r\n    .catch((err) => {\r\n      toast.error(err.response.data.message)\r\n    })\r\n}\r\nexport const updateProductImage = (productImage, productId, history) => {\r\n  ProductServices.updateImageProduct(productImage, productId)\r\n    .then((res) => {\r\n      history.push(\"/products\")\r\n      toast.info(res.data.message)\r\n    })\r\n    .catch((err) => {\r\n      toast.error(err.response.data.message)\r\n    })\r\n}\r\n\r\nexport const actFetchProductById = (data) => {\r\n  return {\r\n    type: FETCH_PRODUCT_BY_ID,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const actFetchProducts = (data) => {\r\n  return {\r\n    type: FETCH_PRODUCTS,\r\n    payload: data,\r\n  }\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\nimport ImageUploading from 'react-images-uploading'\nimport { FormHelperText, IconButton, Grid } from '@material-ui/core'\nimport { PhotoCamera, Edit, Delete } from '@material-ui/icons'\nimport { useEffect } from 'react'\n\n\nconst ImageUploadComponent = ({ maxNumber, isMultiple, handleFile, imageList }) => {\n   const [images, setImages] = useState([])\n\n   useEffect(() => {\n      if (imageList) {\n         setImages(imageList)\n      }\n   }, [imageList])\n   return (\n      <ImageUploading\n         multiple={isMultiple}\n         value={images}\n         onChange={imageList => {\n            setImages(imageList)\n            handleFile(imageList)\n         }}\n         maxNumber={maxNumber}\n         dataURLKey=\"data_url\"\n      >\n         {({\n            imageList,\n            onImageUpload,\n            onImageUpdate,\n            onImageRemove,\n            errors,\n            isDragging,\n            dragProps,\n         }) => (\n            // write your building UI\n            <div className=\"upload__image-wrapper\">\n               {errors && <FormHelperText style={{ color: \"red\" }}>Kiểm tra số lượng ảnh</FormHelperText>}\n               <div>\n                  <IconButton\n                     component=\"span\"\n                     variant=\"outlined\"\n                     color={isDragging ? 'secondary' : \"primary\"}\n                     onClick={onImageUpload}\n                     {...dragProps}\n                  >\n                     <PhotoCamera style={{ fontSize: \"5rem\" }} />\n                  </IconButton>\n               </div>\n               &nbsp;\n               <Grid container>\n                  {imageList.map((image, index) => (\n                     <Grid key={index} item md={6}>\n                        <div className=\"image-item\">\n                           <img src={image['data_url']} alt=\"selected\" />\n                           <div className=\"image-item__btn-wrapper\">\n                              <IconButton color=\"primary\" onClick={() => onImageUpdate(index)}><Edit /></IconButton>\n                              <IconButton color=\"secondary\" onClick={() => onImageRemove(index)}><Delete /></IconButton>\n                           </div>\n                        </div>\n                     </Grid>\n                  ))}\n               </Grid>\n            </div>\n         )}\n      </ImageUploading>\n   )\n}\n\nexport default ImageUploadComponent","import React, { useRef } from 'react'\nimport JoditEditor from \"jodit-react\"\n\nconst RichTextEditor = ({ getContentFromRTE, defaultValue }) => {\n   const editor = useRef(null)\n   return (\n      <JoditEditor\n         ref={editor}\n         tabIndex={1}\n         config={{ readonly: false }}\n         value={defaultValue}\n         onChange={newContent => getContentFromRTE(newContent)}\n      />\n   )\n}\nexport default RichTextEditor","import React, { useEffect, useState } from \"react\"\r\nimport {\r\n  fetchProductById,\r\n  updateProductById,\r\n  updateProductImage\r\n} from \"../../redux/async-actions/product.action\"\r\nimport {\r\n  TextField,\r\n  Button,\r\n  NativeSelect,\r\n  InputLabel,\r\n  FormControl,\r\n  FormGroup,\r\n  Grid,\r\n  FormHelperText,\r\n} from \"@material-ui/core\"\r\nimport { fetchCategories } from \"../../redux/async-actions/category.action\"\r\nimport { fetchBrands } from \"../../redux/async-actions/brand.action\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { domain } from \"../../services/baseURL.services\"\r\nimport ImageUploadComponent from \"../../components/ImageUpload\"\r\nimport RichTextEditor from \"../../components/RichTextEditor\"\r\nimport { useRef } from \"react\"\r\n\r\nconst DetailProduct = () => {\r\n\r\n\r\n  const dispatch = useDispatch()\r\n  const { productId } = useParams()\r\n  const history = useHistory()\r\n  const productById = useSelector(state => state.product.productById)\r\n  const brands = useSelector(state => state.brand.brands)\r\n  const categories = useSelector(state => state.category.categories)\r\n  const contentRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProductById(productId))\r\n    dispatch(fetchCategories())\r\n    dispatch(fetchBrands())\r\n  }, [dispatch, productId])\r\n\r\n\r\n  useEffect(() => {\r\n    let result = []\r\n    if (productById?.productImages) {\r\n      productById.productImages.map(item => result.push({ 'data_url': domain + '/' + item }))\r\n    }\r\n    setImages(result)\r\n  }, [productById])\r\n\r\n\r\n\r\n  const [productValue, setProductValue] = useState()\r\n  const [images, setImages] = useState()\r\n  const [disabledSubmitImage, setDisabledSubmitImage] = useState(true)\r\n  const [isValid, setIsValid] = useState(false)\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setProductValue({\r\n      ...productValue,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n    setIsValid(true)\r\n  }\r\n  const getContentFromRTE = (value) => {\r\n    contentRef.current = value\r\n    if (productById.detail !== contentRef.current) return setIsValid(true)\r\n  }\r\n\r\n  const handleFile = (imageList) => {\r\n    setImages(imageList)\r\n    setDisabledSubmitImage(false)\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (!isValid) return\r\n    updateProductById({ ...productValue, detail: contentRef.current }, productId, history)\r\n  }\r\n  const handleImageSubmit = (e) => {\r\n    e.preventDefault()\r\n    if(disabledSubmitImage) return \r\n    let _formData = new FormData()\r\n    for (let i = 0; i < images.length; i++) {\r\n      _formData.append('productImages', images[i].file)\r\n    }\r\n    updateProductImage(_formData, productId, history)\r\n  }\r\n  return (\r\n    productById && (\r\n      <Grid container justify=\"center\">\r\n        <Grid item md={6}>\r\n          <FormGroup>\r\n            <FormControl style={{ width: \"400px\", margin: \"10px 20px\" }} >\r\n              <TextField\r\n                label=\"Tên sản phẩm\"\r\n                defaultValue={productById.name}\r\n                variant=\"filled\"\r\n                onChange={handleChange}\r\n                fullWidth={true}\r\n                name=\"name\"\r\n              />\r\n            </FormControl>\r\n            <FormControl style={{ width: \"400px\", margin: \"10px 20px\" }}>\r\n              <InputLabel htmlFor=\"brand\">Tên nhãn hàng</InputLabel>\r\n              <NativeSelect\r\n                inputProps={{\r\n                  name: \"brand\",\r\n                  id: \"brand\",\r\n                }}\r\n                variant=\"filled\"\r\n                defaultValue={productById.brand._id}\r\n                onChange={handleChange}\r\n              >\r\n                {brands &&\r\n                  brands.map((brand, index) => {\r\n                    return (\r\n                      <option\r\n                        key={index}\r\n                        value={brand._id} >\r\n                        {brand.nameBrand}\r\n                      </option>\r\n                    )\r\n                  })}\r\n              </NativeSelect>\r\n            </FormControl>\r\n            <FormControl style={{ width: \"400px\", margin: \"10px 20px\" }}>\r\n              <InputLabel htmlFor=\"categories\">Loại sản phẩm</InputLabel>\r\n              <NativeSelect\r\n                inputProps={{\r\n                  name: \"category\",\r\n                  id: \"category\",\r\n                }}\r\n                defaultValue={productById.category._id}\r\n                onChange={handleChange}\r\n              >\r\n                {categories &&\r\n                  categories.map((category, index) => {\r\n                    return (\r\n                      <option key={index} value={category._id}>\r\n                        {category.nameCategory}\r\n                      </option>\r\n                    )\r\n                  })}\r\n              </NativeSelect>\r\n            </FormControl>\r\n            <FormControl style={{ width: \"400px\", margin: \"10px 20px\" }}>\r\n              <RichTextEditor getContentFromRTE={getContentFromRTE} defaultValue={productById.detail} />\r\n            </FormControl>\r\n            <FormControl style={{ width: \"200px\", margin: \"10px 20px\" }}>\r\n              <TextField\r\n                name=\"capacity\"\r\n                label=\"Công suất\"\r\n                defaultValue={productById.capacity}\r\n                variant=\"filled\"\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl style={{ width: \"200px\", margin: \"10px 20px\" }}>\r\n              <InputLabel htmlFor=\"isNewProduct\">Tình trạng</InputLabel>\r\n              <NativeSelect\r\n                inputProps={{\r\n                  name: \"isNewProduct\",\r\n                  id: \"isNewProduct\",\r\n                }}\r\n                defaultValue={productById.isNewProduct ? true : false}\r\n                onChange={handleChange}\r\n              >\r\n                <option value={true}>Mới </option>\r\n                <option value={false}>Cũ</option>\r\n              </NativeSelect>\r\n\r\n            </FormControl>\r\n            <FormHelperText> ** Thay đổi nội dung muốn thay đổi xong nhấn Lưu</FormHelperText>\r\n            <FormControl style={{ padding: \"0 40px\" }} fullWidth >\r\n              <Button disabled={!isValid} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n                Lưu\r\n              </Button>\r\n            </FormControl>\r\n          </FormGroup >\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <FormControl >\r\n            <FormHelperText> *** Muốn cập nhật hình mới phải xoá tất cả ảnh cũ sau đó chọn lại ảnh mới </FormHelperText>\r\n            <ImageUploadComponent maxNumber={4} isMultiple={true} handleFile={handleFile} imageList={images} />\r\n          </FormControl>\r\n          <FormControl style={{ padding: \"0 40px\" }} fullWidth >\r\n            <Button disabled={disabledSubmitImage} variant=\"contained\" color=\"primary\" onClick={handleImageSubmit}>\r\n              Lưu ảnh mới\r\n            </Button>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid >\r\n    )\r\n  )\r\n}\r\n\r\n\r\nexport default DetailProduct\r\n","import React, { createContext, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\n\nexport const AuthContext = createContext()\n\nconst AuthProvider = ({ children }) => {\n   const history = useHistory()\n   const [profile, setProfile] = useState({})\n\n   useEffect(() => {\n      let profile = JSON.parse(localStorage.getItem('profile'))\n      if (!profile) {\n         history.push('/login')\n         return\n      }\n      else {\n         setProfile(profile)\n      }\n   }, [history])\n   return (\n      <AuthContext.Provider value={{ profile }} >\n         {children}\n      </AuthContext.Provider>\n   )\n}\nexport default AuthProvider","\nimport React from 'react'\nimport MuiListItem from \"@material-ui/core/ListItem\";\nimport {\n   ListItemIcon, withStyles,\n   ListItemText\n} from '@material-ui/core'\n\nconst SideListItem = ({ tabSelected, setTabSelected, history, tabIndex, icon, route, label }) => {\n   const ListItem = withStyles({\n      root: {\n         \"&$selected\": {\n            backgroundColor: \"#2980b9\",\n            color: \"white\",\n            \"& .MuiListItemIcon-root\": {\n               color: \"white\"\n            }\n         },\n         \"&$selected:hover\": {\n            backgroundColor: \"#2980b9\",\n            color: \"white\",\n            \"& .MuiListItemIcon-root\": {\n               color: \"white\"\n            }\n         },\n         \"&:hover\": {\n            backgroundColor: \"#95a5a6\",\n            color: \"white\",\n            \"& .MuiListItemIcon-root\": {\n               color: \"white\"\n            }\n         }\n      },\n      selected: {}\n   })(MuiListItem)\n   return (\n      <ListItem\n         button\n         selected={tabSelected === tabIndex}\n         onClick={() => {\n            history.push(`${route}`)\n            setTabSelected(tabIndex)\n         }}>\n         <ListItemIcon>{icon}</ListItemIcon>\n         <ListItemText primary={label} />\n      </ListItem>\n   )\n}\nexport default SideListItem","import React, { useEffect, useState } from \"react\"\r\nimport {\r\n  List,\r\n} from \"@material-ui/core\"\r\nimport { HomeRounded, ComputerRounded, AppsRounded, BlurOn, Add,PostAdd } from \"@material-ui/icons\"\r\nimport './sidelist.css'\r\nimport { useHistory, useLocation } from \"react-router\"\r\nimport SideListItem from \"./sidelistitem\";\r\n\r\n\r\nconst data = [\r\n  { route: \"/admin\", tabIndex: 0, icon: <HomeRounded />, label: \"Home\" },\r\n  { route: \"/products\", tabIndex: 1, icon: <ComputerRounded />, label: \"Sản phẩm\" },\r\n  { route: \"/products/add-product\", tabIndex: 2, icon: <Add />, label: \"Thêm sản phẩm\" },\r\n  { route: \"/projects\", tabIndex: 3, icon: <AppsRounded />, label: \"Dự án\" },\r\n  { route: \"/projects/add-project\", tabIndex: 4, icon: <PostAdd />, label: \"Thêm dự án\" },\r\n  { route: \"/categories\", tabIndex: 5, icon: <AppsRounded />, label: \"Loại sản phẩm\" },\r\n  { route: \"/brands\", tabIndex: 6, icon: <BlurOn />, label: \"Nhãn hàng\" },\r\n\r\n]\r\nconst SideList = () => {\r\n\r\n  const history = useHistory()\r\n  const [tabSelected, setTabSelected] = useState(0)\r\n  const location = useLocation()\r\n  useEffect(() => {\r\n    switch (location.pathname) {\r\n      case '/':\r\n        setTabSelected(0)\r\n        break;\r\n      case '/admin':\r\n        setTabSelected(0)\r\n        break;\r\n      case '/products':\r\n        setTabSelected(1)\r\n        break;\r\n      case '/products/add-product':\r\n        setTabSelected(2)\r\n        break;\r\n      case '/projects':\r\n        setTabSelected(3)\r\n        break;\r\n      case '/projects/add-project':\r\n        setTabSelected(4)\r\n        break;\r\n      case '/categories':\r\n        setTabSelected(5)\r\n        break;\r\n      case '/brands':\r\n        setTabSelected(6)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [location.pathname])\r\n\r\n  \r\n  return (\r\n    <List component=\"nav\" className=\"sidelist\">\r\n      {data.map((item, index) => <SideListItem\r\n        key={index}\r\n        history={history}\r\n        route={item.route}\r\n        tabSelected={tabSelected}\r\n        setTabSelected={setTabSelected}\r\n        tabIndex={item.tabIndex}\r\n        icon={item.icon}\r\n        label={item.label}\r\n      />)}\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default SideList\r\n","import React, { useEffect } from \"react\"\r\nimport MUIDataTable from \"mui-datatables\"\r\nimport { Button } from \"@material-ui/core\"\r\nimport { fetchProducts } from \"../../redux/async-actions/product.action\"\r\nimport { deleteProductById } from \"../../redux/async-actions/product.action\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { domain } from \"../../services/baseURL.services\"\r\n\r\n\r\nconst Products = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const products = useSelector(state => state.product.products)\r\n  const options = {\r\n    selectableRows: \"none\",\r\n    filterType: \"dropdown\",\r\n    rowsPerPage: 5\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProducts())\r\n  }, [dispatch])\r\n\r\n\r\n  const columns = [\r\n    {\r\n      name: \"_id\",\r\n      label: \"Id\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"name\",\r\n      label: \"Tên sản phẩm\",\r\n      option: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"productImages\",\r\n      label: \"Hình ảnh\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        customBodyRender: (name) => {\r\n          return (\r\n            <img\r\n              src={domain + '/' + name[0]}\r\n              alt=\"product\"\r\n              width=\"100px\"\r\n              height=\"100px\"\r\n            />\r\n          )\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"detail\",\r\n      label: \"Mô tả\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        display: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"isNewProduct\",\r\n      label: \"Tình trạng\",\r\n      options: {\r\n        customBodyRender: (name) => {\r\n          return name ? \"Mới\" : \"Cũ\"\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"category.nameCategory\",\r\n      label: \"Loại sản phẩm\",\r\n      options: {\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"brand.nameBrand\",\r\n      label: \"Hãng\",\r\n      options: {\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"capacity.nameCapacity\",\r\n      label: \"Công suất\",\r\n      options: {\r\n        display: false,\r\n        sort: false,\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"Thiết lập\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        empty: true,\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => history.push(`/products/update-product/${tableMeta.rowData[0]}`)}\r\n              >\r\n                Cập nhật\r\n              </Button>\r\n              <Button\r\n                style={{ marginLeft: \"10px\" }}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                  dispatch(deleteProductById(`${tableMeta.rowData[0]}`))\r\n                }}\r\n              >\r\n                Xóa\r\n              </Button>\r\n            </>\r\n          )\r\n        },\r\n      },\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <MUIDataTable\r\n      className=\"table__products\"\r\n      title={\"Danh sách sản phẩm\"}\r\n      data={products ? products : undefined}\r\n      columns={columns}\r\n      options={options}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Products\r\n","import React, { useState, useEffect } from \"react\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { createProduct } from \"../../redux/async-actions/product.action\"\r\nimport { fetchBrands } from \"../../redux/async-actions/brand.action\"\r\nimport { fetchCategories } from \"../../redux/async-actions/category.action\"\r\nimport { Button, FormControl, FormHelperText, Grid, Select, TextField } from \"@material-ui/core\"\r\nimport './product.css'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport RichTextEditor from \"../../components/RichTextEditor\"\r\nimport { useRef } from \"react\"\r\nimport ImageUploadComponent from \"../../components/ImageUpload\"\r\n\r\n\r\nconst AddProduct = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const brands = useSelector(state => state.brand.brands)\r\n  const categories = useSelector(state => state.category.categories)\r\n  const contentRef = useRef(null)\r\n  const [productValue, setProductValue] = useState({})\r\n  const [images, setImages] = useState([]);\r\n  const [isValid, setIsValid] = useState(false)\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCategories())\r\n    dispatch(fetchBrands())\r\n  }, [dispatch])\r\n\r\n  const getContentFromRTE = (value) => {\r\n    contentRef.current = value\r\n    validateValue()\r\n  }\r\n  const handleChange = (e) => {\r\n    setProductValue({\r\n      ...productValue,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n    validateValue()\r\n  }\r\n  const handleFile = (imageList) => {\r\n    // data for submit\r\n    setImages(imageList);\r\n    validateValue()\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (isValid) {\r\n      let formData = new FormData()\r\n      formData.append('name', productValue.name)\r\n      formData.append('brand', productValue.brand)\r\n      formData.append('category', productValue.category)\r\n      formData.append('detail', contentRef.current)\r\n      formData.append('capacity', productValue.capacity)\r\n      formData.append('isNewProduct', productValue.isNewProduct)\r\n      for (let i = 0; i < images.length; i++) {\r\n        formData.append('productImages', images[i].file)\r\n      }\r\n      createProduct(formData, history)\r\n    }\r\n    else return\r\n  }\r\n  const validateValue = () => {\r\n    if (productValue.name === '' ||\r\n      productValue.brand === '' ||\r\n      productValue.category === '' ||\r\n      contentRef.current === '' ||\r\n      productValue.capacity === '' ||\r\n      productValue.isNewProduct === '' ||\r\n      images.length !== 4\r\n    ) return setIsValid(false)\r\n    return setIsValid(true)\r\n  }\r\n\r\n  return (\r\n    <Grid container justify=\"space-between\">\r\n      <Grid item md={4} style={{ padding: \"1.3rem 1.8rem\" }}>\r\n        <FormHelperText>Chọn loại sản phẩm</FormHelperText>\r\n        <FormControl variant=\"filled\" fullWidth>\r\n          <Select\r\n            native\r\n            name=\"category\"\r\n            value={productValue.category}\r\n            onChange={handleChange}\r\n          >\r\n            <option defaultValue>Loại sản phẩm</option>\r\n            {categories && categories.map((category, index) => {\r\n              return (\r\n                <option key={index} value={category._id}>\r\n                  {category.nameCategory}\r\n                </option>\r\n              )\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl variant=\"filled\" fullWidth>\r\n          <FormHelperText>Chọn hãng </FormHelperText>\r\n          <Select\r\n            native\r\n            name=\"brand\"\r\n            onChange={handleChange}\r\n          >\r\n            <option defaultValue>Chọn hãng</option>\r\n            {brands &&\r\n              brands.map((brand, index) => {\r\n                return (\r\n                  <option key={index} value={brand._id}>\r\n                    {brand.nameBrand}\r\n                  </option>\r\n                )\r\n              })}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl fullWidth>\r\n          <FormHelperText>Nhập tên sản phấm</FormHelperText>\r\n          <TextField\r\n            variant=\"filled\"\r\n            label=\"Tên sản phẩm\"\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n          />\r\n        </FormControl>\r\n        <FormControl fullWidth>\r\n          <FormHelperText>Nhập công suất của máy ( có thể bỏ qua trường này )</FormHelperText>\r\n          <TextField\r\n            variant=\"filled\"\r\n            placeholder=\"Nhập công suất\"\r\n            name=\"capacity\"\r\n            onChange={handleChange}\r\n          />\r\n        </FormControl>\r\n        <FormControl fullWidth variant=\"filled\">\r\n          <FormHelperText>Nhập tình trạng máy</FormHelperText>\r\n          <Select\r\n            native\r\n            id=\"inputState\"\r\n            name=\"isNewProduct\"\r\n            onChange={handleChange}\r\n          >\r\n            <option defaultValue>Tình trạng</option>\r\n            <option value={true}>Mới</option>\r\n            <option value={false}>Cũ</option>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item md={8} style={{ padding: \"1.3rem 1.8rem\" }}>\r\n        <FormControl fullWidth>\r\n          <FormHelperText> Chọn 4 ảnh sản phẩm  </FormHelperText>\r\n          <ImageUploadComponent maxNumber={4} isMultiple={true} handleFile={handleFile} />\r\n        </FormControl>\r\n        <FormControl fullWidth>\r\n          <FormHelperText>Nhập chi tiết sản phẩm</FormHelperText>\r\n          <RichTextEditor getContentFromRTE={getContentFromRTE} />\r\n        </FormControl>\r\n        <FormControl fullWidth>\r\n          <Button disabled={!isValid} variant=\"contained\" color=\"primary\" type=\"submit\" onClick={handleSubmit} align=\"center\">\r\n            Thêm sản phẩm\r\n          </Button>\r\n        </FormControl>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n\r\nexport default AddProduct\r\n","import React from 'react'\nimport './NotFoundPage.css'\n\n\nconst NotFoundPage = () => {\n   return (\n      <div className=\"notfoundpage\">\n         <div className=\"notfoundpage__container\">\n            <p>Oops! Đường dẫn này không tồn tại</p>\n            <h1> 404 error</h1>\n            <a href=\"/admin\">Quay lại trang chủ</a>\n         </div>\n      </div>\n   )\n}\n\n\nexport default NotFoundPage\n","import { restConnector } from \"./baseURL.services\"\n\n\n\nclass ProjectServices {\n   createProject(projectData) {\n      return restConnector({\n         url: 'api/projects/create-project',\n         method: 'POST',\n         data: projectData\n      })\n   }\n   fetchProjects() {\n      return restConnector({\n         url: 'api/projects/get-projects',\n         method: \"GET\"\n      })\n   }\n   fetchProjectById(projectId) {\n      return restConnector({\n         url: `api/projects/get-project-by-id/${projectId}`,\n         method: \"GET\"\n      })\n   }\n   deleteProjectById(projectId) {\n      return restConnector({\n         url: `api/projects/delete-project-by-id/${projectId}`,\n         method: \"DELETE\"\n      })\n   }\n   updateProjectById(projectId, updateValue) {\n      return restConnector({\n         url: `api/projects/update-project-by-id/${projectId}`,\n         data: updateValue,\n         method: \"PUT\"\n      })\n   }\n   updateProjectThumb(projectId, newThumb) {\n      return restConnector({\n         url: `api/projects/update-project-thumb/${projectId}`,\n         data: newThumb,\n         method: \"PUT\"\n      })\n   }\n}\n\n\n\nexport default new ProjectServices()","import { toast } from 'react-toastify'\nimport ProjectServices from '../../services/project.services'\nimport { DELETE_PROJECT_BY_ID, FETCH_PROJECTS, FETCH_PROJECT_BY_ID, FILTER_PROJECTS } from './actionType'\n\nexport const createProject = (projectData, history) => {\n   ProjectServices.createProject(projectData)\n      .then(res => {\n         history.push('/projects')\n         toast.success('Đã tạo thành công')\n      })\n      .catch(err => toast(err.response.data))\n}\n\nexport const fetchProjects = () => {\n   return dispatch => {\n      ProjectServices.fetchProjects()\n         .then(res => dispatch({ type: FETCH_PROJECTS, payload: res.data }))\n         .catch(err => toast.error('Đã có lỗi xảy ra'))\n   }\n}\nexport const fetchProjectById = (projectId) => {\n   return dispatch => {\n      ProjectServices.fetchProjectById(projectId)\n         .then(res => dispatch({ type: FETCH_PROJECT_BY_ID, payload: res.data }))\n         .catch(err => toast.error(err.response.data.message))\n   }\n}\nexport const filterProject = (searchTerm) => {\n   return dispatch => dispatch({ type: FILTER_PROJECTS, payload: searchTerm })\n}\n\nexport const deleteProjectById = (projectId) => {\n   return dispatch => {\n      ProjectServices.deleteProjectById(projectId)\n         .then(res => {\n            dispatch({ type: DELETE_PROJECT_BY_ID, payload: projectId })\n            toast.success(res.data.message)\n         })\n         .catch(err => console.log(err.response.data.message))\n   }\n}\n\n\nexport const updateProjectById=(projectId,updateValue,history)=>{\n   ProjectServices.updateProjectById(projectId,updateValue)\n      .then(res=>{\n         history.push('/projects')\n         toast.success('Cập nhật thành công')\n      })\n      .catch(err=>toast.error(err.response.data.message))  \n}\n\nexport const updateProjectThumb = (projectId,newThumb,history)=>{\n   ProjectServices.updateProjectThumb(projectId,newThumb)\n      .then(res=>{\n         history.push('/projects')\n         toast.success('Cập nhật thành công')\n      })\n      .catch(err => toast(err.response.data.message))\n   }","import React from 'react'\n\nimport {\n   Grid, Card, CardActions,\n   CardContent, CardMedia, Typography, IconButton\n} from '@material-ui/core'\nimport { Delete, Edit } from '@material-ui/icons'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { domain } from '../../services/baseURL.services'\n\nconst ProjectItem = ({ project, handleDeleteProject }) => {\n   const history = useHistory()\n   const { pathname } = useLocation()\n   return (\n      <Grid item md={3} sm={6} xs={12} className='project__item'>\n         <Card>\n            <CardMedia\n               component=\"img\"\n               height=\"140\"\n               image={domain + \"/\" + project.projectThumb}\n               alt=\"project\"\n            />\n            <CardContent>\n               <Typography gutterBottom variant=\"h5\" component=\"div\">\n                  {project.title.slice(0, 40) + \"...\"}\n               </Typography>\n            </CardContent>\n            <CardActions >\n               <IconButton color=\"primary\" onClick={() => history.push(`${pathname}/update-project/${project._id}`)}>\n                  <Edit />\n               </IconButton>\n               <IconButton color=\"secondary\" onClick={() => handleDeleteProject(project._id)}>\n                  <Delete />\n               </IconButton>\n            </CardActions>\n         </Card>\n      </Grid >\n   )\n}\n\nexport default ProjectItem","import { Grid, InputAdornment, FormControl, InputLabel, OutlinedInput } from '@material-ui/core'\nimport { Search } from '@material-ui/icons'\nimport React, { Fragment, useState } from 'react'\nimport { useRef } from 'react'\nimport { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useSelector } from 'react-redux'\nimport { deleteProjectById, fetchProjects, filterProject } from '../../redux/async-actions/project.action'\nimport ProjectItem from './item.project'\nimport './project.css'\n\nconst Project = () => {\n   const projects = useSelector(state => state.project.projects)\n   const dispatch = useDispatch()\n   const typingTimeOutRef = useRef(null)\n   const [searchTerm, setSearchTerm] = useState()\n\n   const handleSearch = (e) => {\n      let value = e.target.value\n      setSearchTerm(value)\n      if (typingTimeOutRef.current) {\n         clearTimeout(typingTimeOutRef.current)\n      }\n      typingTimeOutRef.current = setTimeout(() => {\n         if(value === '') return dispatch(fetchProjects())\n         dispatch(filterProject(value))\n      }, 500)\n   }\n\n   const handleDeleteProject = (projectId) => {\n      dispatch(deleteProjectById(projectId))\n   }\n\n   useEffect(() => {\n      dispatch(fetchProjects())\n   }, [dispatch])\n\n   return (\n      <Fragment>\n         <div className='project__filterbar'>\n            <FormControl sx={{ m: 1, width: '25ch' }} onChange={handleSearch} md={{ width: '5rem ' }} variant=\"outlined\">\n               <InputLabel htmlFor=\"outlined-adornment-password\">Tìm kiếm bài viết...</InputLabel>\n               <OutlinedInput\n                  id=\"outlined-adornment-password\"\n                  endAdornment={\n                     <InputAdornment position=\"end\">\n                        <Search />\n                     </InputAdornment>\n                  }\n                  label=\"Password\"\n               />\n            </FormControl>\n         </div>\n         <Grid container className='project__posts' justify='space-evenly'>\n            {projects && projects.map(project => <ProjectItem handleDeleteProject={handleDeleteProject}\n               project={project} key={project._id} />)}\n         </Grid>\n      </Fragment>\n   )\n}\n\nexport default Project","import React, { useState, useRef } from 'react'\nimport { Container, FormControl, FormGroup, FormHelperText, TextField, Button } from '@material-ui/core'\nimport './project.css'\nimport { useHistory } from 'react-router-dom'\nimport { createProject } from '../../redux/async-actions/project.action'\nimport RichTextEditor from '../../components/RichTextEditor';\nimport ImageUploadComponent from '../../components/ImageUpload'\n\nconst AddProject = () => {\n   const history = useHistory()\n   const contentRef = useRef(null)\n   const [projectValue, setProjectValue] = useState({ title: '', images: [] })\n   const [isValid, setIsValid] = useState(false)\n\n   // Xử lý image vào state\n   const handleFile = (imageList) => {\n      setProjectValue({ ...projectValue, images: imageList })\n   }\n   // Set value từ Rich Text Editor\n   const getContentFromRTE = (value) => {\n      contentRef.current = value\n      validateProjectForm()\n   }\n\n   // Check validate form \n   const validateProjectForm = () => {\n      if (!projectValue.title ||\n         projectValue.images.length === 0 ||\n         contentRef.current === ''\n      ) setIsValid(false)\n      else setIsValid(true)\n   }\n   //Submit Form\n   const handleSubmitProject = () => {\n      if (isValid) {\n         let _formData = new FormData()\n         _formData.append('title', projectValue.title)\n         _formData.append('content', contentRef.current)\n         _formData.append('projectThumb',  projectValue.images[0].file)\n         createProject(_formData, history)\n      }\n      return\n   }\n\n\n   return (\n      <Container style={{ marginTop: \"3rem\" }} maxWidth=\"md\">\n         <FormGroup style={{ border: \"1px dotted #535c68\", padding: \"1rem 1.5rem\" }}>\n            <FormControl name='title' onChange={e => {\n               setProjectValue({\n                  ...projectValue,\n                  title: e.target.value\n               })\n               validateProjectForm()\n            }}>\n               <FormHelperText>Nhập tiêu đề bài viết</FormHelperText>\n               <TextField variant=\"outlined\" label=\"Tiêu đề\" />\n            </FormControl>\n            <FormControl fullWidth>\n               <FormHelperText> Chọn ảnh tiêu đề bài viết </FormHelperText>\n               <ImageUploadComponent maxNumber={1} isMultiple={false} handleFile={handleFile} />\n            </FormControl>\n            <FormControl fullWidth>\n               <FormHelperText perText>Nhập nội dung bài viết</FormHelperText>\n               <RichTextEditor getContentFromRTE={getContentFromRTE} />\n            </FormControl>\n            <FormControl onClick={handleSubmitProject}>\n               <Button disabled={!isValid} style={{ marginTop: \"2rem\" }} color=\"primary\" variant=\"contained\" > Lưu bài viết</Button>\n            </FormControl>\n         </FormGroup>\n      </Container>\n   )\n\n}\n\nexport default AddProject","import React, { useState, useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { fetchProjectById, updateProjectById, updateProjectThumb } from '../../redux/async-actions/project.action'\nimport {\n   FormGroup, FormControl,\n   FormHelperText, TextField, Grid, Button\n} from '@material-ui/core'\nimport ImageUploadComponent from '../../components/ImageUpload'\nimport RichTextEditor from '../../components/RichTextEditor'\nimport { domain } from '../../services/baseURL.services'\n\n\nconst DetailProject = () => {\n\n   const { projectId } = useParams()\n\n\n   const dispatch = useDispatch()\n   const history = useHistory()\n   const project = useSelector(state => state.project.projectById)\n   const [title, setTitle] = useState('')\n   const [isValid, setIsValid] = useState(true)\n   const [thumb, setThumb] = useState([])\n   const [isThumbValid, setIsThumbValid] = useState(false)\n   const contentRef = useRef(null)\n\n\n   useEffect(() => {\n      dispatch(fetchProjectById(projectId))\n   }, [dispatch, projectId])\n\n\n   useEffect(() => {\n      let result = []\n      if (project?.projectThumb) {\n         result.push({ 'data_url': domain + '/' + project.projectThumb })\n         setThumb(result)\n      }\n   }, [project])\n\n\n   const getContentFromRTE = (value) => {\n      contentRef.current = value\n      validateProjectForm()\n   }\n   const handleTitleChange = (e) => {\n      setTitle(e.target.value)\n   }\n   const validateProjectForm = () => {\n      if (title !== '' || contentRef.current !== project.content) return setIsValid(true)\n      else if (contentRef.current === '' || title.length === 0) return setIsValid(false)\n      return setIsValid(false)\n   }\n   const handleUpdateProject = () => {\n      if (isValid) {\n         updateProjectById(projectId, { title: title, content: contentRef.current }, history)\n      }\n      return \n   }\n\n   const validateProjectThumb = () => {\n      if (thumb.length === 0) return setIsThumbValid(false)\n      return setIsThumbValid(true)\n   }\n   const handleFile = (imageList) => {\n      setThumb(imageList)\n      validateProjectThumb()\n   }\n\n\n   const handleUpdateProjectThumb = () => {\n      let _formData = new FormData()\n      _formData.append('projectThumb', thumb[0].file)\n      updateProjectThumb(projectId,_formData, history)\n   }\n\n\n\n\n\n\n\n\n   return project && (<Grid container>\n      <Grid item md={6}>\n         <FormGroup style={{ border: \"1px dotted #535c68\", padding: \"1rem 1.5rem\" }}>\n            <FormControl name='title'>\n               <FormHelperText>Nhập tiêu đề bài viết</FormHelperText>\n               <TextField defaultValue={project.title} variant=\"outlined\" label=\"Tiêu đề\" onChange={handleTitleChange} onBlur={validateProjectForm} />\n            </FormControl>\n\n            <FormControl fullWidth>\n               <FormHelperText>Nhập nội dung bài viết</FormHelperText>\n               <RichTextEditor getContentFromRTE={getContentFromRTE} defaultValue={project.content} />\n            </FormControl>\n\n            <FormControl onClick={handleUpdateProject}>\n               <Button disabled={!isValid} style={{ marginTop: \"2rem\" }} color=\"primary\" variant=\"contained\" > Lưu bài viết</Button>\n            </FormControl>\n         </FormGroup>\n      </Grid>\n      <Grid item md={6}>\n         <FormGroup style={{ border: \"1px dotted #535c68\", padding: \"1rem 1.5rem\" }}>\n            <FormControl fullWidth>\n               <FormHelperText> Chọn ảnh tiêu đề bài viết </FormHelperText>\n               <FormHelperText> * Chỉ được chọn 1 ảnh</FormHelperText>\n               <ImageUploadComponent maxNumber={1} isMultiple={false} handleFile={handleFile} imageList={thumb} />\n            </FormControl>\n            <FormControl>\n               <Button disabled={!isThumbValid} variant=\"contained\" color=\"primary\" onClick={handleUpdateProjectThumb}>Lưu ảnh tiêu đề</Button>\n            </FormControl>\n         </FormGroup>\n      </Grid>\n   </Grid >\n   )\n}\n\nexport default DetailProject","import React, { Fragment } from \"react\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport \"./App.css\"\nimport Main from \"./Screens/Main\"\nimport Navbar from \"./Layouts/navbar\"\nimport { Route, Switch } from \"react-router-dom\"\nimport Authentication from \"./Screens/Authentication\"\nimport Categories from \"./Screens/Categories\"\nimport Footer from \"./Layouts/footer\"\nimport Brands from \"./Screens/Brands\"\nimport { ToastContainer, toast } from \"react-toastify\"\nimport DetailProduct from \"./Screens/Products/detail.products\"\nimport { useLocation } from 'react-router-dom'\nimport AuthProvider from \"./context/AuthProvider\"\nimport SideList from \"./components/sidelist\"\nimport { Grid } from \"@material-ui/core\"\nimport Products from \"./Screens/Products/table.products\"\nimport AddProduct from \"./Screens/Products/add.product\"\nimport NotFoundPage from \"./Screens/NotFoundPage\"\nimport Project from \"./Screens/Project/project\"\nimport AddProject from \"./Screens/Project/add.project\"\nimport DetailProject from \"./Screens/Project/detail.project\"\n\nfunction App() {\n  const location = useLocation()\n\n\n  return (\n    <Fragment>\n      {location.pathname === '/login' ? null : <Navbar />}\n      <ToastContainer\n        position={toast.POSITION.TOP_RIGHT}\n        autoClose={3000}\n        hideProgressBar\n      />\n      <AuthProvider>\n        <Grid container>\n          {location.pathname === '/login' ? null : (<Grid item md={2} >\n            <SideList />\n          </Grid>)}\n          <Grid item md={10}>\n            <Switch>\n              <Route path=\"/projects\" exact component={Project} />\n              <Route path=\"/projects/update-project/:projectId\" exact component={DetailProject} /> \n              <Route path=\"/projects/add-project\" exact component={AddProject} />\n              <Route path=\"/products\" exact component={Products} />\n              <Route path=\"/products/add-product\" exact component={AddProduct} />\n              <Route path=\"/products/update-product/:productId\" exact component={DetailProduct} />\n              <Route path=\"/categories\" exact component={Categories} />\n              <Route path=\"/brands\" exact component={Brands} />\n              <Route path=\"/login\" exact component={Authentication} />\n              <Route path=\"/admin\" exact component={Main} />\n              <Route path=\"/\" exact component={Main} />\n              <Route path=\"*\" exact component={NotFoundPage} />\n            </Switch>\n          </Grid>\n        </Grid>\n      </AuthProvider>\n      {location.pathname === '/login' ? null : <Footer />}\n    </Fragment>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { LOGIN, LOGOUT } from \"../async-actions/actionType\"\r\nimport jwt from 'jsonwebtoken'\r\n\r\nlet initialState = {\r\n  profile: {}\r\n}\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      state.profile = jwt.verify(action.payload, 'LTTNElectric')\r\n      localStorage.setItem('profile', JSON.stringify(state.profile))\r\n      return { ...state }\r\n    case LOGOUT:\r\n      localStorage.clear()\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default userReducer\r\n","import {\r\n  FETCH_BRANDS,\r\n  ADD_BRAND,\r\n} from \"../async-actions/actionType\"\r\n\r\nlet initialState = {\r\n  brands: null,\r\n}\r\nconst brandReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BRANDS:\r\n      return { ...state, brands: action.payload }\r\n    case ADD_BRAND:\r\n      let temp = [...state.brands, action.payload]\r\n      return { ...state, brands: temp }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default brandReducer\r\n","import {\r\n  FETCH_CATEGORIES,\r\n  ADD_CATEGORY,\r\n} from \"../async-actions/actionType\"\r\n\r\nlet initialState = {\r\n  categories: null,\r\n}\r\nconst categoryReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CATEGORIES:\r\n      state.categories = action.payload\r\n      return { ...state }\r\n    case ADD_CATEGORY:\r\n      let resultArr = [...state.categories, action.payload]\r\n      return { ...state, categories: resultArr }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default categoryReducer\r\n","import {\r\n  FETCH_PRODUCTS,\r\n  DELETE_PRODUCT_BY_ID,\r\n  FETCH_PRODUCT_BY_ID,\r\n} from \"../async-actions/actionType\"\r\n\r\nlet initialState = {\r\n  products: null,\r\n  productById: null,\r\n}\r\nconst productReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCTS:\r\n      state.products = action.payload\r\n      return { ...state }\r\n    case FETCH_PRODUCT_BY_ID:\r\n      state.productById = action.payload\r\n      return { ...state }\r\n    case DELETE_PRODUCT_BY_ID:\r\n      let deletedArr = state.products.filter((product) => product._id !== action.payload)\r\n      return { ...state, products: deletedArr }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default productReducer\r\n","import { DELETE_PROJECT_BY_ID, FETCH_PROJECTS, FETCH_PROJECT_BY_ID, FILTER_PROJECTS } from \"../async-actions/actionType\"\n\nlet initialState = {\n   projects: null,\n   projectById: null\n}\n\nconst projectReducer = (state = initialState, action) => {\n   switch (action.type) {\n      case FETCH_PROJECTS:\n         return { ...state, projects: action.payload }\n      case FETCH_PROJECT_BY_ID:\n         return { ...state, projectById: action.payload }\n      case FILTER_PROJECTS:\n         let resultFilter = state.projects.filter(project => project.slug.toLowerCase().includes(action.payload.toLowerCase()))\n         return { ...state, projects: resultFilter }\n      case DELETE_PROJECT_BY_ID:\n         let resultArr = state.projects.filter(project => project._id !== action.payload)\n         return { ...state, projects: resultArr }\n      default:\n         return state\n   }\n}\n\nexport default projectReducer","import { combineReducers } from \"redux\"\r\nimport userReducer from \"./user.reducer\"\r\nimport brandReducer from \"./brand.reducer\"\r\nimport categoryReducer from \"./category.reducer\"\r\nimport productReducer from \"./products.reducer\"\r\nimport projectReducer from './project.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  brand: brandReducer,\r\n  category: categoryReducer,\r\n  product: productReducer,\r\n  project: projectReducer\r\n})\r\nexport default rootReducer\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\nimport { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { Provider } from \"react-redux\"\r\nimport { BrowserRouter } from \"react-router-dom\"\r\nimport rootReducer from \"./redux/reducers/root.reducer\"\r\n\r\nconst initialState = {}\r\nconst middlewares = [thunk]\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middlewares),\r\n   // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n)\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}